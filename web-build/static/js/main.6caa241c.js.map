{"version":3,"file":"static/js/main.6caa241c.js","mappings":"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","sources":["src/context/AuthContext.js","src/context/ErrorContext.js","src/styles/colors.js","src/styles/styles.js","src/components/Buttons/CustomButton.js","src/styles/screenStyles/NewPasswordStyles.js","src/screens/PublicScreens/NotFoundScreen.js","src/utils/navigation.js","src/components/Card/CustomCard.js","src/utils/database.js","src/components/Inputs/CustomSearchInput.js","src/components/Card/CustomCardProducts.js","src/components/Card/CustomCardProductsKardex.js","src/screens/AppScreens/KardexScreen.js","src/components/Drawer/CustomDrawer.js","src/utils/reports.js","src/components/Charts/CustomChart.js","src/components/Card/CustomSalesOverviewCard.js","src/screens/AppScreens/HomeScreen.js","src/components/Card/CustomCardSuppliers.js","src/screens/AppScreens/SuppliersScreen.js","src/screens/AppScreens/AccountingScreen.js","src/screens/AppScreens/InventoryScreen.js","src/components/Card/CustomCardClients.js","src/screens/AppScreens/ClientsScreen.js","src/screens/AppScreens/SettingsScreen.js","src/components/Inputs/CustomInputText.js","src/utils/customer.js","src/utils/constants.js","src/components/Steper/Billing/BillingStep1.js","src/utils/billing.js","src/components/Card/CustomSearchCart.js","src/components/Card/CustomSelectedCart.js","src/components/Steper/Billing/BillingStep2.js","src/components/Inputs/CustomInputNumber.js","src/components/Steper/Billing/BillingStep3.js","src/components/Card/CustomResumeCart.js","src/components/Steper/Billing/BillingStep4.js","src/components/Steper/BillingStepper.js","src/screens/AppScreens/BillingScreen.js","src/navigation/SideNavigation.js","src/components/Pickers/CustomPicker.js","src/components/Forms/NewClientForm.js","src/components/Forms/NewSupplierForm.js","src/components/Forms/NewProductForm.js","src/components/Forms/CompanyDataForm.js","src/utils/supplier.js","src/screens/AppScreens/ProfileScreen.js","src/components/Forms/NewCategoryForm.js","src/screens/AppScreens/AccountsScreen.js","src/screens/AppScreens/JournalScreen.js","src/screens/AppScreens/LedgerScreen.js","src/screens/AppScreens/CardexScreen.js","src/screens/AppScreens/UserScreen.js","src/screens/AppScreens/ProductScreen.js","src/components/Forms/NewAccountForm.js","src/screens/AppScreens/StockScreen.js","src/components/Card/CustomCardInvoices.js","src/screens/AppScreens/InvoiceScreen.js","src/screens/AppScreens/DetailsScreen.js","src/components/Forms/EditAccountForm.js","src/navigation/AppStack.js","src/utils/useRegistration.js","src/screens/AuthScreens/SignUpScreen.js","src/styles/screenStyles/ConfirmEmailStyles.js","src/utils/useConfirmation.js","src/screens/AuthScreens/ConfirmEmailScreen.js","src/screens/AuthScreens/ForgotPasswordScreen.js","src/screens/AuthScreens/NewPasswordScreen.js","src/screens/AuthScreens/SignInScreen.js","src/styles/GlobalStyles.js","src/screens/PublicScreens/PrivacyPolicyScreen.js","src/screens/PublicScreens/TermsUseScreen.js","src/navigation/AuthStack.js","src/screens/ConfigScreens/InitialConfigScreen.js","src/navigation/ConfigStack.js","src/navigation/AppNavigation.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  signIn,\r\n  signOut,\r\n  fetchAuthSession,\r\n  updateUserAttributes,\r\n  getCurrentUser,\r\n} from \"aws-amplify/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [config, setConfig] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    checkUser(); // Verify at start\r\n  }, []);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const checkUser = async () => {\r\n    try {\r\n      const { idToken } = (await fetchAuthSession()).tokens ?? {};\r\n      setUser(idToken);\r\n    } catch (err) {\r\n      setUser(null);\r\n      if (err && err.message) {\r\n        setError(err.message);\r\n      } else {\r\n        setError(\"An unknown error occurred\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  async function logIn(username, password) {\r\n    try {\r\n      await signIn({ username, password });\r\n      const { idToken } = (await fetchAuthSession()).tokens ?? {};\r\n      setUser(idToken);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut();\r\n      setUser(null);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  async function updateAttribute() {\r\n    try {\r\n      await updateUserAttributes({\r\n        userAttributes: {\r\n          \"custom:config\": \"true\",\r\n        },\r\n      });\r\n      await logOut();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        logIn,\r\n        logOut,\r\n        clearError,\r\n        updateAttribute,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst ErrorContext = createContext();\r\n\r\nexport const useError = () => {\r\n  const context = useContext(ErrorContext);\r\n  if (!context) {\r\n    throw new Error(\r\n      \"useError debe estar utilizado dentro de un Provider de ErrorContext\"\r\n    );\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ErrorProvider = ({ children }) => {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const clearError = () => {\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const value = {\r\n    errorMessage,\r\n    setErrorMessage,\r\n    clearError,\r\n  };\r\n\r\n  return (\r\n    <ErrorContext.Provider value={value}>{children}</ErrorContext.Provider>\r\n  );\r\n};\r\n","export default {\r\n  primary: '#3498db',\r\n  secondary: '#2ecc71',\r\n  danger: '#e74c3c',\r\n  light: '#ecf0f1',\r\n  dark: '#34495e',\r\n };","import { StyleSheet } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nexport default StyleSheet.create({\r\n  void: {},\r\n  root: {\r\n    flex: 1,\r\n    backgroundColor: \"#F9FBFC\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n  },\r\n  /* Containers */\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"#F9FBFC\",\r\n  },\r\n  containerRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    columnGap: 1,\r\n  },\r\n  containerCol: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    rowGap: 1,\r\n  },\r\n  containerTable: {\r\n    backgroundColor: \"#fff\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    padding: 15,\r\n    marginVertical: 5,\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  inputContainer: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 10,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    position: \"relative\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  customerDetails: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  searchProduct: {\r\n    width: \"100%\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 5,\r\n  },\r\n  selectedProducts: {\r\n    width: \"50%\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 5,\r\n  },\r\n  itemContainer: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    /* borderBottomColor: \"#ccc\", */\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 8,\r\n    borderBottomColor: \"#ddd\",\r\n  },\r\n  itemDetails: {\r\n    flex: 1,\r\n  },\r\n  productItem: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n  },\r\n  item: {\r\n    width: \"50%\",\r\n  },\r\n  billSummary: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  /* Buttons */\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 16,\r\n  },\r\n  /* Buttons Styles */\r\n  container_PRIMARY: {\r\n    backgroundColor: \"#531158\",\r\n  },\r\n  container_SECONDARY: {\r\n    borderColor: \"#531158\",\r\n    borderWidth: 2,\r\n  },\r\n  container_TERTIARY: {},\r\n  container_DANGER: {},\r\n  textButton: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  text_SECONDARY: {\r\n    color: \"#531158\",\r\n  },\r\n  text_TERTIARY: {\r\n    color: \"gray\",\r\n  },\r\n  text_DANGER: {\r\n    color: \"red\",\r\n  },\r\n  removeButton: {\r\n    paddingHorizontal: 8,\r\n  },\r\n  /* Table Styles */\r\n  headerTable: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#ccc\",\r\n    paddingBottom: 5,\r\n  },\r\n  headerTextTable: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 16,\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  itemTable: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#eee\",\r\n  },\r\n  cellTable: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n    borderRightWidth: 1,\r\n    borderColor: \"grey\",\r\n    padding: 5,\r\n  },\r\n  cellRowTable: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  nameTable: {\r\n    textAlign: \"center\",\r\n  },\r\n  /* Billing Styles  */\r\n  cartContainer: {\r\n    padding: 20,\r\n  },\r\n  searchContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n\r\n  quantityContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"right\",\r\n  },\r\n  quantityInput: {\r\n    padding: 8,\r\n    marginVertical: 3,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    fontSize: 14,\r\n    width: 40,\r\n    textAlign: \"center\",\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  itemDescription: {\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n  },\r\n  /* Profile */\r\n  imgContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: 300,\r\n    resizeMode: \"contain\",\r\n  },\r\n  info: {\r\n    marginTop: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  detail: {\r\n    fontSize: 18,\r\n    marginTop: 10,\r\n  },\r\n  itemContainer: {\r\n    backgroundColor: \"#ffffff\",\r\n    marginBottom: 20,\r\n    padding: 15,\r\n    borderRadius: 5,\r\n  },\r\n  itemTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  itemDescription: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  itemPrice: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  itemDetails: {\r\n    fontSize: 14,\r\n    color: \"gray\",\r\n    marginBottom: 10,\r\n  },\r\n  addToCartButton: {\r\n    backgroundColor: \"#26A69A\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  addToCartText: {\r\n    color: \"#ffffff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  /* Input */\r\n  label: {\r\n    position: \"absolute\",\r\n    top: -10,\r\n    left: 10,\r\n    backgroundColor: \"#F9FBFC\",\r\n    paddingHorizontal: 5,\r\n    fontSize: 12,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    paddingHorizontal: 10,\r\n  },\r\n  /* Images */\r\n  logo: {\r\n    width: \"70%\",\r\n    maxWidth: 300,\r\n    maxHeight: 200,\r\n  },\r\n  /* Text */\r\n  text: {\r\n    color: \"gray\",\r\n    marginVertical: 10,\r\n  },\r\n  /* Link */\r\n  link: {\r\n    color: \"#FDB075\",\r\n  },\r\n  /* Card */\r\n  card: {\r\n    backgroundColor: \"#fff\",\r\n    marginBottom: 10,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: \"100%\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    borderColor: \"#531158\",\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardImage: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  cardText: {\r\n    padding: 10,\r\n    fontSize: 16,\r\n  },\r\n  cardSubText: {\r\n    padding: 10,\r\n    fontSize: 12,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport {View, Text, StyleSheet, Pressable} from 'react-native';\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst CustomButton = ({onPress, text, type = 'PRIMARY', bgColor, fgColor}) => {\r\n  return (\r\n    <Pressable\r\n      onPress={onPress}\r\n      style={[\r\n        styles.buttonContainer,\r\n        styles[`container_${type}`],\r\n        bgColor ? {backgroundColor: bgColor} : {},\r\n      ]}>\r\n      <Text\r\n        style={[\r\n          styles.textButton,\r\n          styles[`text_${type}`],\r\n          fgColor ? {color: fgColor} : {},\r\n        ]}>\r\n        {text}\r\n      </Text>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const newPasswordStyles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    marginTop: 50\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#051C60',\r\n    margin: 10,\r\n  },\r\n  text: {\r\n    color: 'gray',\r\n    marginVertical: 10,\r\n  },\r\n  link: {\r\n    color: '#FDB075',\r\n  },\r\n});","import React, { useState } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\n\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { useNavigate } from \"@react-navigation/native\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\n\r\nconst NotFoundScreen = () => {\r\n  const navigation = useNavigate();\r\n\r\n  const onNewPressed = () => {\r\n    navigation.navigate(\"\");\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={newPasswordStyles.root}>\r\n        <Text style={newPasswordStyles.title}>Sorry component not found</Text>\r\n        <CustomButton text=\"New\" onPress={onNewPressed} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NotFoundScreen;\r\n","import { useNavigation } from \"@react-navigation/core\";\r\n\r\nconst useNavigate = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const goTo = (screenName, params={}) => {\r\n    navigation.navigate(screenName, params);\r\n  };\r\n\r\n  const goBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  return { goTo, goBack };\r\n};\r\n\r\nexport default useNavigate;\r\n","import {\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\n\r\nconst numColumns = 4;\r\n\r\nconst CustomCard = ({ data, helper, type }) => {\r\n  const { goTo } = useNavigate();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        if (type === \"clients\") {\r\n          const itemData = item.firstName\r\n            ? item.firstName.toUpperCase()\r\n            : \"\".toUpperCase();\r\n          const textData = text.toUpperCase();\r\n          return itemData.indexOf(textData) > -1;\r\n        }\r\n        if (type === \"inventory\" || type === \"cardex\") {\r\n          const itemData = item.nombre_producto\r\n            ? item.nombre_producto.toUpperCase()\r\n            : \"\".toUpperCase();\r\n          const textData = text.toUpperCase();\r\n          return itemData.indexOf(textData) > -1;\r\n        }\r\n        if (type === \"suppliers\") {\r\n          const itemData = item.nombre_comercial\r\n            ? item.nombre_comercial.toUpperCase()\r\n            : \"\".toUpperCase();\r\n          const textData = text.toUpperCase();\r\n          return itemData.indexOf(textData) > -1;\r\n        }\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    if (type === \"suppliers\") {\r\n      goTo(\"UserProfile\", { id: item.id_proveedor });\r\n    }\r\n    if (type === \"clients\") {\r\n      goTo(\"UserProfile\", { id: item.id_cliente });\r\n    }\r\n    if (type === \"inventory\") {\r\n      goTo(\"ProductProfile\", { id: item.id_producto });\r\n    }\r\n    if (type === \"cardex\") {\r\n      goTo(\"HistoryProduct\", { id: item.id_producto });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Search Here\"\r\n          value={search}\r\n          onChangeText={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={filter}\r\n        numColumns={numColumns}\r\n        style={styles.container}\r\n        renderItem={({ item }) => {\r\n          if (type === \"clients\") {\r\n            return (\r\n              <View style={styles.card}>\r\n                {/* <Image style={styles.cardImage} source={{ uri: item.image }} /> */}\r\n                <Text style={styles.cardText}>{item.apellido}</Text>\r\n                <Text style={styles.cardText}>{item.nombre}</Text>\r\n                <CustomButton\r\n                  text={helper}\r\n                  type=\"TERTIARY\"\r\n                  onPress={() => onMorePressed(item)}\r\n                />\r\n              </View>\r\n            );\r\n          }\r\n          if (type === \"inventory\") {\r\n            return (\r\n              <View style={styles.card}>\r\n                {/* <Image\r\n                  style={styles.cardImage}\r\n                  source={{ uri: item.images[0] }}\r\n                /> */}\r\n                <Text style={styles.cardText}>{item.nombre_producto}</Text>\r\n                <Text style={styles.cardText}>{item.id_categoria}</Text>\r\n                <CustomButton\r\n                  text={helper}\r\n                  type=\"TERTIARY\"\r\n                  onPress={() => onMorePressed(item)}\r\n                />\r\n              </View>\r\n            );\r\n          }\r\n          if (type === \"cardex\") {\r\n            return (\r\n              <View style={styles.card}>\r\n                {/* <Image\r\n                  style={styles.cardImage}\r\n                  source={{ uri: item.images[0] }}\r\n                /> */}\r\n                <Text style={styles.cardText}>{item.nombre_producto}</Text>\r\n                <CustomButton\r\n                  text={helper}\r\n                  type=\"TERTIARY\"\r\n                  onPress={() => onMorePressed(item)}\r\n                />\r\n              </View>\r\n            );\r\n          }\r\n          if (type === \"suppliers\") {\r\n            return (\r\n              <View style={styles.card}>\r\n                {/* <Image style={styles.cardImage} source={{ uri: item.image }} /> */}\r\n                <Text style={styles.cardText}>{item.nombre_comercial}</Text>\r\n                <Text style={styles.cardText}>RUC: {item.identificacion}</Text>\r\n                <CustomButton\r\n                  text={helper}\r\n                  type=\"TERTIARY\"\r\n                  onPress={() => onMorePressed(item)}\r\n                />\r\n              </View>\r\n            );\r\n          }\r\n        }}\r\n        keyExtractor={(item) => {\r\n          if (type === \"inventory\" || type === \"cardex\") {\r\n            item.id_producto.toString();\r\n          }\r\n          if (type === \"clients\") {\r\n            item.id_cliente.toString();\r\n          }\r\n          if (type === \"suppliers\") {\r\n            item.id_proveedor.toString();\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: \"#fff\",\r\n    marginBottom: 10,\r\n    marginLeft: 20,\r\n    width: \"100%\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1,\r\n    shadowOffset: {\r\n      width: 3,\r\n      height: 3,\r\n    },\r\n    flex: 1,\r\n  },\r\n  cardImage: {\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  cardText: {\r\n    padding: 10,\r\n    fontSize: 16,\r\n  },\r\n  cardSubText: {\r\n    padding: 10,\r\n    fontSize: 12,\r\n  },\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n\r\n    borderColor: \"#e8e8e8\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n\r\n    paddingHorizontal: 10,\r\n    marginVertical: 5,\r\n  },\r\n  input: {},\r\n});\r\n","/* Function to get data */\r\nexport const fetchData = async (url) => {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* Function to get amount of certain data */\r\nexport const getDataByCategory = async (id) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/categories/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const { body } = await response.json();\r\n    const { count } = JSON.parse(body);\r\n    return count;\r\n  } catch (error) {\r\n    throw new Error(\"Error fetching quantity\");\r\n  }\r\n};\r\n\r\n/* Function to add a new category */\r\nexport const addCategory = async (data) => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/categories\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to add category. Status: ${response.status}`);\r\n    }\r\n    const responseData = await response.json();\r\n    return responseData;\r\n  } catch (error) {\r\n    console.error(\"Error adding category:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* Function to add a new client */\r\nexport const addClient = async (data, idType) => {\r\n  try {\r\n    const requestData = {\r\n      ...data,\r\n      tid: idType,\r\n    };\r\n    const response = await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/customer\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to add client. Status: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(\"Error adding client:\", error);\r\n    throw new Error(\"Failed to add client\");\r\n  }\r\n};\r\n\r\n/* Function to add new product */\r\nexport const addProductToInventory = async (\r\n  data,\r\n  idCategory,\r\n  idSupplier,\r\n  idType,\r\n  idUnit\r\n) => {\r\n  try {\r\n    // Validación de datos\r\n    if (\r\n      isNaN(Number(data.price)) ||\r\n      isNaN(Number(data.sugprice)) ||\r\n      isNaN(Number(data.stock)) ||\r\n      !data.name ||\r\n      !idCategory ||\r\n      !idSupplier ||\r\n      !idType ||\r\n      !idUnit\r\n    ) {\r\n      throw new Error(\"Invalid data or missing required fields\");\r\n    }\r\n    // Asignación de valores\r\n    const requestData = {\r\n      ...data,\r\n      supplier: idSupplier,\r\n      category: idCategory,\r\n      type: idType,\r\n      unit: idUnit,\r\n      price: Number(data.price),\r\n      sugprice: Number(data.sugprice),\r\n      stock: Number(data.stock),\r\n      name: data.name.toLowerCase(),\r\n    };\r\n\r\n    console.log(requestData)\r\n\r\n    // Llamada a la API para agregar producto al inventario\r\n    await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error adding product:\", error);\r\n    throw new Error(\"Failed to add product to inventory\");\r\n  }\r\n};\r\n\r\n/* Function to add a new supplier */\r\nexport const addSupplier = async (data) => {\r\n  try {\r\n    console.log(JSON.stringify(data));\r\n    data.name = data.name.toLowerCase();\r\n    data.lastname = data.lastname.toLowerCase();\r\n    data.address = data.address.toLowerCase();\r\n    data.comercial = data.commercial.toLowerCase();\r\n    const response = await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/suppliers\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to add supplier\");\r\n    }\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error adding supplier:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/* Function to update data */\r\nexport const updateData = async (url, id, newData) => {\r\n  try {\r\n    const response = await fetch(`${url}/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to update data\");\r\n    }\r\n\r\n    const updatedData = await response.json();\r\n    return updatedData;\r\n  } catch (error) {\r\n    console.error(\"Error updating data:\", error.message);\r\n    throw error; // Puedes manejar el error aquí o relanzarlo para que lo maneje la capa superior\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst CustomSearchInput = ({\r\n  control,\r\n  name,\r\n  label,\r\n  rules = {},\r\n  placeholder,\r\n  secureTextEntry,\r\n  handleInputChange,\r\n  defaultValue,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      defaultValue={defaultValue || \"\"}\r\n      control={control}\r\n      name={name}\r\n      rules={rules}\r\n      render={({\r\n        field: { value, onChange, onBlur },\r\n        fieldState: { error },\r\n      }) => {\r\n        const isError = !!error;\r\n        return (\r\n          <View style={[styles.void, isError && { borderColor: \"red\" }]}>\r\n            <View\r\n              style={[\r\n                styles.inputContainer,\r\n                { borderColor: isError ? \"red\" : \"#e8e8e8\" },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[styles.label, { color: isError ? \"red\" : \"black\" }]}\r\n              >\r\n                {label}\r\n              </Text>\r\n              <TextInput\r\n                type=\"text\"\r\n                disabled={disabled}\r\n                value={value}\r\n                onChangeText={(text) => {\r\n                  onChange(text);\r\n                  handleInputChange && handleInputChange(text);\r\n                }}\r\n                onBlur={onBlur}\r\n                placeholder={placeholder}\r\n                style={styles.input}\r\n                secureTextEntry={secureTextEntry}\r\n              />\r\n            </View>\r\n            {isError && (\r\n              <Text style={{ color: \"red\", alignSelf: \"stretch\" }}>\r\n                {error.message || \"Error\"}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomSearchInput;\r\n","import { Text, FlatList, Image, View, Platform } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CustomSearchInput from \"../Inputs/CustomSearchInput\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst CustomCardProducts = ({ data, helper }) => {\r\n  const device = Platform.OS;\r\n  const numColumns = device === \"web\" ? 6 : 2;\r\n  const { goTo } = useNavigate();\r\n  const { control } = useForm();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\r\n        const itemCodeData = item.code\r\n          ? item.code.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const itemAuxData = item.aux\r\n          ? item.aux.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return (\r\n          itemData.indexOf(textData) > -1 ||\r\n          itemCodeData.indexOf(textData) > -1 ||\r\n          itemAuxData.indexOf(textData) > -1\r\n        );\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    goTo(\"ProductProfile\", { item: item });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          {\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            borderColor: \"#e8e8e8\",\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            paddingHorizontal: 10,\r\n            marginVertical: 5,\r\n          },\r\n        ]}\r\n      >\r\n        <CustomSearchInput\r\n          placeholder=\"Keyword Here\"\r\n          name={\"search\"}\r\n          label={\"Search\"}\r\n          control={control}\r\n          handleInputChange={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={filter}\r\n        numColumns={numColumns}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View style={styles.card}>\r\n              <Image\r\n                style={styles.cardImage}\r\n                source={require(\"../../assets/product_default.jpg\")}\r\n              />\r\n              <Text style={styles.cardText}>{item.name}</Text>\r\n              <Text style={styles.cardText}>Main Code: {item.code}</Text>\r\n              <Text style={styles.cardText}>Code: {item.aux}</Text>\r\n              <Text style={styles.cardText}>Stock: {item.stock}</Text>\r\n              <Text style={styles.cardText}>Price: {item.price}</Text>\r\n              <CustomButton\r\n                text={helper}\r\n                type=\"TERTIARY\"\r\n                onPress={() => onMorePressed(item)}\r\n              />\r\n            </View>\r\n          );\r\n        }}\r\n        /* keyExtractor={(item) => {\r\n          item.id.toString();\r\n        }} */\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCardProducts;\r\n","import {\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  TextInput,\r\n  Platform,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst device = Platform.OS;\r\nconst numColumns = device === \"web\" ? 6 : 2;\r\n\r\nconst CustomCardProductsKardex = ({ data, helper, type }) => {\r\n  const { goTo } = useNavigate();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        const itemData = item.name ? item.name.toUpperCase() : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    goTo(\"HistoryProduct\", { item: item });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          {\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            borderColor: \"#e8e8e8\",\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            paddingHorizontal: 10,\r\n            marginVertical: 5,\r\n          },\r\n        ]}\r\n      >\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Search Here\"\r\n          value={search}\r\n          onChangeText={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={filter}\r\n        numColumns={numColumns}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View style={styles.card}>\r\n              <Text style={styles.cardText}>{item.name}</Text>\r\n              <Text style={styles.cardText}>Main Code: {item.code}</Text>\r\n              <CustomButton\r\n                text={helper}\r\n                type=\"TERTIARY\"\r\n                onPress={() => onMorePressed(item)}\r\n              />\r\n            </View>\r\n          );\r\n        }}\r\n        /* keyExtractor={(item) => {\r\n          item.id.toString();\r\n        }} */\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCardProductsKardex;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport CustomCard from \"../../components/Card/CustomCard\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomCardProducts from \"../../components/Card/CustomCardProducts\";\r\nimport CustomCardProductsKardex from \"../../components/Card/CustomCardProductsKardex\";\r\n\r\nconst KardexScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const { goTo, goBack } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setProducts(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n    >\r\n      <View style={styles.container}>\r\n        <CustomCardProductsKardex\r\n          data={products}\r\n          helper={\"History\"}\r\n          type={\"cardex\"}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default KardexScreen;\r\n","import { Text, View, Image, Pressable, ImageBackground } from \"react-native\";\r\nimport React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport USER from \"../../assets/user-default-96.png\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport {\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\n\r\nconst CustomDrawer = (props) => {\r\n  const { logOut, user } = useContext(AuthContext);\r\n  const onLogOutPress = () => {\r\n    logOut();\r\n  };\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <DrawerContentScrollView\r\n        {...props}\r\n        contentContainerStyle={{ backgroundColor: \"#531158\", paddingTop: 0 }}\r\n      >\r\n        <ImageBackground\r\n          source={require(\"../../assets/background-side.jpg\")}\r\n          style={{\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <Image\r\n            source={USER}\r\n            style={{\r\n              height: 80,\r\n              width: 80,\r\n              borderRadius: 40,\r\n              marginBottom: 10,\r\n            }}\r\n          />\r\n          <Text\r\n            style={{\r\n              fontSize: 18,\r\n              fontWeight: \"bold\",\r\n              color: \"#fff\",\r\n            }}\r\n          >\r\n            {user.payload[\"name\"]}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 16,\r\n              color: \"#fff\",\r\n            }}\r\n          >\r\n            {user.payload[\"cognito:username\"]}\r\n          </Text>\r\n        </ImageBackground>\r\n        <View style={{ flex: 1, paddingTop: 10, backgroundColor: \"#fff\" }}>\r\n          <DrawerItemList {...props} />\r\n        </View>\r\n      </DrawerContentScrollView>\r\n      <View\r\n        style={{\r\n          borderTopColor: \"#ccc\",\r\n          borderTopWidth: 1,\r\n          padding: 20,\r\n        }}\r\n      >\r\n        <Pressable onPress={onLogOutPress} style={[]}>\r\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n            <Ionicons name=\"log-out-outline\" size={24} color=\"red\" />\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                marginLeft: 5,\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Log out\r\n            </Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CustomDrawer;\r\n","// Función para obtener el total de ventas por día\r\nexport async function fetchTotalSalesByDay() {\r\n  const response = await fetch(\r\n    \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/reports/daily\"\r\n  );\r\n  const data = await response.json();\r\n  const value = data[0].total_por_dia;\r\n  return data !== null ? value : 0;\r\n}\r\n\r\n// Función para obtener el total de ventas por mes\r\nexport async function fetchTotalSalesByMonth() {\r\n  const response = await fetch(\r\n    \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/reports/monthly\"\r\n  );\r\n  const data = await response.json();\r\n  const value = data[0].total_por_mes;\r\n  return data !== null ? value : 0;\r\n}\r\n\r\n// Función para obtener el total de ventas por año\r\nexport async function fetchTotalSalesByYear() {\r\n  const response = await fetch(\r\n    \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/reports/yearly\"\r\n  );\r\n  const data = await response.json();\r\n  const value = data[0].total_por_anio;\r\n  return data !== null ? value : 0;\r\n}\r\n\r\n// Función para obtener el historial completo de ventas\r\nexport async function fetchHistoricalSales() {\r\n  const response = await fetch(\r\n    \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/reports/historical\"\r\n  );\r\n  const data = await response.json();\r\n  const monthlyData = data.map((item) => {\r\n    return {\r\n      x: Number(item.mes),\r\n      y: (item.total_por_mes),\r\n    };\r\n  });\r\n  console.log(monthlyData);\r\n  return monthlyData;\r\n}\r\n\r\n/* Function to get the total of sales */\r\nexport async function fetchTotalSales() {\r\n  const response = await fetch(\r\n    \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/reports/total\"\r\n  );\r\n  const data = await response.json();\r\n  const value = data[0].sum;\r\n  return value;\r\n}\r\n\r\n","import { Platform, Dimensions } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  VictoryPie,\r\n  VictoryChart,\r\n  VictoryBar,\r\n  VictoryLabel,\r\n  VictoryTheme,\r\n  VictoryTooltip,\r\n  VictoryGroup,\r\n  VictoryLine,\r\n  VictoryScatter,\r\n  VictoryAxis,\r\n} from \"../../modules/charts\";\r\nimport { fetchHistoricalSales } from \"../../utils/reports\";\r\n\r\nconst CustomChart = (data) => {\r\n  const [historicalSales, setHistoricalSales] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const historicalSalesData = await fetchHistoricalSales();\r\n      setHistoricalSales(historicalSalesData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  const screenHeight = Dimensions.get(\"window\").height;\r\n  const device = Platform.OS;\r\n\r\n  return (\r\n    <>\r\n      <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        width={screenWidth}\r\n        height={device === \"web\" ? screenHeight : 300}\r\n      >\r\n        <VictoryLine\r\n          style={{\r\n            data: { stroke: \"#c43a31\" },\r\n            parent: { border: \"1px solid #ccc\" },\r\n          }}\r\n          data={historicalSales}\r\n        />\r\n        <VictoryScatter\r\n          data={historicalSales}\r\n          size={10}\r\n          style={{ data: { fill: \"#c43a31\" } }}\r\n        />\r\n        <VictoryAxis style={{ grid: { stroke: \"transparent\" } }} />\r\n        <VictoryAxis\r\n          dependentAxis\r\n          style={{ axis: { stroke: \"transparent\" }, grid: { stroke: \"grey\" } }}\r\n        />\r\n      </VictoryChart>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomChart;\r\n","import React from 'react';\r\nimport {View, Text, StyleSheet} from 'react-native';\r\n\r\nconst SalesOverviewCard = ({title, subtitle, annualAmount, dailyAmount}) => {\r\n return (\r\n    <View style={styles.card}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Text style={styles.amount}>${annualAmount}</Text>\r\n      <Text style={styles.subtitle}>{subtitle}</Text>\r\n      <Text style={styles.amount}>${dailyAmount}</Text>\r\n    </View>\r\n );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n card: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n },\r\n title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n },\r\n amount: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n },\r\n subtitle: {\r\n    fontSize: 14,\r\n    color: '#777',\r\n    marginBottom: 5,\r\n },\r\n});\r\n\r\nexport default SalesOverviewCard;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Platform,\r\n  ScrollView,\r\n  Text,\r\n  View,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport CustomChart from \"../../components/Charts/CustomChart\";\r\nimport styles from \"../../styles/styles\";\r\nimport SalesOverviewCard from \"../../components/Card/CustomSalesOverviewCard\";\r\nimport {\r\n  fetchTotalSales,\r\n  fetchTotalSalesByDay,\r\n  fetchTotalSalesByMonth,\r\n  fetchTotalSalesByYear,\r\n} from \"../../utils/reports\";\r\n\r\nexport default function HomeScreen() {\r\n  const { user } = useContext(AuthContext);\r\n  const [totalSalesByDay, setTotalSalesByDay] = useState(null);\r\n  const [totalSalesByMonth, setTotalSalesByMonth] = useState(null);\r\n  const [totalSalesByYear, setTotalSalesByYear] = useState(null);\r\n  const [totalSales, setTotalSales] = useState(null);\r\n  const [loading, setLoading] = useState(true); \r\n  const device = Platform.OS;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const totalSalesByDayData = await fetchTotalSalesByDay();\r\n      setTotalSalesByDay(totalSalesByDayData);\r\n\r\n      const totalSalesByMonthData = await fetchTotalSalesByMonth();\r\n      setTotalSalesByMonth(totalSalesByMonthData);\r\n\r\n      const totalSalesByYearData = await fetchTotalSalesByYear();\r\n      setTotalSalesByYear(totalSalesByYearData);\r\n\r\n      const totalSalesData = await fetchTotalSales();\r\n      setTotalSales(totalSalesData);\r\n\r\n      setLoading(false); \r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        flex: device === \"web\" ? 1 : 0,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { flex: 1 }]}>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Hello, {user.payload.name}\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.customerDetails,\r\n            {\r\n              marginVertical: 15,\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={{ fontSize: 18 }}>Your sales:</Text>\r\n          <Text style={{ fontSize: 18, color: \"#0aada8\" }}>${Number(totalSales).toFixed(2)}</Text>\r\n        </View>\r\n        {loading ? ( // Mostrar indicador de carga si loading es true\r\n          <ActivityIndicator size=\"large\" color=\"#0aada8\" />\r\n        ) : (\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: device === \"web\" ? \"row\" : \"column\",\r\n              width: \"100%\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <CustomChart />\r\n            </View>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                rowGap: device === \"web\" ? 0 : 15,\r\n              }}\r\n            >\r\n              <SalesOverviewCard\r\n                title=\"Daily Sales\"\r\n                subtitle={\"Gain per hour\"}\r\n                annualAmount={totalSalesByDay}\r\n                dailyAmount={(totalSalesByDay/8).toFixed(2)}\r\n              />\r\n              <SalesOverviewCard\r\n                title=\"Monthly Sales\"\r\n                subtitle={\"Gain per day\"}\r\n                annualAmount={totalSalesByMonth}\r\n                dailyAmount={(totalSalesByMonth/30).toFixed(2)}\r\n              />\r\n              <SalesOverviewCard\r\n                title=\"Annual Sales\"\r\n                subtitle={\"Gain per month\"}\r\n                annualAmount={totalSalesByYear}\r\n                dailyAmount={(totalSalesByYear/12).toFixed(2)}\r\n              />\r\n            </View>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import { Text, FlatList, View, Platform } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport CustomSearchInput from \"../Inputs/CustomSearchInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst device = Platform.OS;\r\nconst numColumns = device === \"web\" ? 6 : 2;\r\n\r\nconst CustomCardSuppliers = ({ data, helper, refresher }) => {\r\n  const { goTo } = useNavigate();\r\n  const { control } = useForm();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        const itemData = item.commercial\r\n          ? item.commercial.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const rucData = item.ruc ? item.ruc.toUpperCase() : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return (\r\n          itemData.indexOf(textData) > -1 || rucData.indexOf(textData) > -1\r\n        );\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    goTo(\"UserProfile\", { person: item, refresher });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          {\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            borderColor: \"#e8e8e8\",\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            paddingHorizontal: 10,\r\n            marginVertical: 5,\r\n          },\r\n        ]}\r\n      >\r\n        <CustomSearchInput\r\n          placeholder=\"Search Here\"\r\n          name={\"search\"}\r\n          label={\"Search\"}\r\n          control={control}\r\n          handleInputChange={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={filter}\r\n        numColumns={numColumns}\r\n        style={styles.container}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <View style={styles.card}>\r\n              {/* <Image style={styles.cardImage} source={{ uri: item.image }} /> */}\r\n              <Text style={styles.cardText}>{item.commercial}</Text>\r\n              <Text style={styles.cardText}>RUC: {item.ruc}</Text>\r\n              <CustomButton\r\n                text={helper}\r\n                type=\"TERTIARY\"\r\n                onPress={() => onMorePressed(item)}\r\n              />\r\n            </View>\r\n          );\r\n        }}\r\n        /* keyExtractor={(item) => {\r\n          item.id.toString();\r\n        }} */\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCardSuppliers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomCardSuppliers from \"../../components/Card/CustomCardSuppliers\";\r\n\r\nconst SuppliersScreen = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { goTo } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/suppliers\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setUsers(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const updateSuppliers = () => {\r\n    loadData();\r\n  };\r\n\r\n  const onNewPressed = () => {\r\n    goTo(\"NewSupplier\", { updateSuppliers });\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={styles.container}>\r\n        <CustomButton text=\"New\" onPress={onNewPressed} />\r\n        <CustomCardSuppliers\r\n          data={users}\r\n          helper={\"Details\"}\r\n          type={\"suppliers\"}\r\n          refresher={updateSuppliers}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SuppliersScreen;\r\n","import { View, Text, ScrollView } from \"react-native\";\r\nimport React from \"react\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst AccountingScreen = () => {\r\n  const { goTo } = useNavigate();\r\n\r\n  const onButtonPress = (page) => {\r\n    goTo(page);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <CustomButton\r\n          text={\"Invoices\"}\r\n          onPress={() => onButtonPress(\"InvoiceList\")}\r\n        />\r\n        <CustomButton text={\"Kardex\"} onPress={() => onButtonPress(\"Kardex\")} />\r\n        {/* <CustomButton\r\n          text={\"Reports\"} onPress={() => onButtonPress(\"Reports\")}\r\n        /> */}\r\n        <CustomButton\r\n          text={\"Accounts\"}\r\n          onPress={() => onButtonPress(\"Accounts\")}\r\n        />\r\n        <CustomButton text={\"Diary\"} onPress={() => onButtonPress(\"Journal\")} />\r\n        <CustomButton text={\"Major\"} onPress={() => onButtonPress(\"Major\")} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default AccountingScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, ScrollView, Dimensions } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomCardProducts from \"../../components/Card/CustomCardProducts\";\r\n\r\nconst InventoryScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const { goTo } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setProducts(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const updateProducts = () => {\r\n    loadData();\r\n  };\r\n\r\n  const onNewPressed = () => {\r\n    goTo(\"NewProduct\", { updateProducts });\r\n  };\r\n\r\n  const onPlusPressed = () => {\r\n    goTo(\"StockChange\", { type: \"add\", updateProducts });\r\n  };\r\n\r\n  const onMinusPressed = () => {\r\n    goTo(\"StockChange\", { type: \"rest\", updateProducts });\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={styles.container}>\r\n        <View\r\n          style={[\r\n            styles.containerCol,\r\n            { alignItems: \"baseline\", width: \"100%\" },\r\n          ]}\r\n        >\r\n          <View style={[styles.void, { width: \"100%\" }]}>\r\n            <CustomButton text=\"New\" onPress={onNewPressed} />\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.containerRow,\r\n              {\r\n                width: \"50%\",\r\n              },\r\n            ]}\r\n          >\r\n            <CustomButton text=\"+\" onPress={onPlusPressed} type=\"SECONDARY\" />\r\n            <CustomButton text=\"-\" onPress={onMinusPressed} type=\"SECONDARY\" />\r\n          </View>\r\n        </View>\r\n\r\n        <CustomCardProducts data={products} helper={\"Details\"} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default InventoryScreen;\r\n","import { Text, FlatList, View, Platform } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport CustomSearchInput from \"../Inputs/CustomSearchInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst device = Platform.OS;\r\nconst numColumns = device === \"web\" ? 6 : 2;\r\n\r\nconst CustomCardClients = ({ data, helper, refresher }) => {\r\n  const { goTo } = useNavigate();\r\n  const { control } = useForm();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        const itemData = item.lastname\r\n          ? item.lastname.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        const firstNameData = item.firstname\r\n          ? item.firstname.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const ciData = item.ci\r\n          ? item.ci.toString().toUpperCase()\r\n          : \"\".toUpperCase();\r\n        return (\r\n          itemData.indexOf(textData) > -1 ||\r\n          firstNameData.indexOf(textData) > -1 ||\r\n          ciData.indexOf(textData) > -1\r\n        );\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    goTo(\"UserProfile\", { person: item, refresher });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          {\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            borderColor: \"#e8e8e8\",\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            paddingHorizontal: 10,\r\n            marginVertical: 5,\r\n          },\r\n        ]}\r\n      >\r\n        <CustomSearchInput\r\n          placeholder=\"Keyword Here\"\r\n          name={\"search\"}\r\n          label={\"Search\"}\r\n          control={control}\r\n          handleInputChange={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <FlatList\r\n        data={filter}\r\n        numColumns={numColumns}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <View style={styles.card}>\r\n              {/* <Image style={styles.cardImage} source={{ uri: item.image }} /> */}\r\n              <Text style={styles.cardText}>\r\n                {item.lastname} {item.firstname}\r\n              </Text>\r\n              <Text style={styles.cardText}>{item.ci}</Text>\r\n              <CustomButton\r\n                text={helper}\r\n                type=\"TERTIARY\"\r\n                onPress={() => onMorePressed(item)}\r\n              />\r\n            </View>\r\n          );\r\n        }}\r\n        /* keyExtractor={(item) => {\r\n          item.id.toString();\r\n        }} */\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCardClients;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomCardClients from \"../../components/Card/CustomCardClients\";\r\n\r\nconst ClientsScreen = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const { goTo } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/customer\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setUsers(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const updateClients = () => {\r\n    loadData();\r\n  };\r\n\r\n  const onNewPressed = () => {\r\n    goTo(\"NewClient\", { updateClients });\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={styles.container}>\r\n        <CustomButton text=\"New\" onPress={onNewPressed} />\r\n        <CustomCardClients\r\n          data={users}\r\n          helper={\"Details\"}\r\n          type={\"clients\"}\r\n          refresher={updateClients}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ClientsScreen;\r\n","import React from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nexport default function SettingsScreen() {\r\n  const { goTo } = useNavigate();\r\n\r\n  const onButtonPress = (page) => {\r\n    goTo(page);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <CustomButton text=\"Company\" onPress={() => onButtonPress(\"Company\")} />\r\n        <CustomButton text=\"Profile\" onPress={() => onButtonPress(\"User\")} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst CustomInputText = ({\r\n  control,\r\n  name,\r\n  label,\r\n  rules = {},\r\n  placeholder,\r\n  secureTextEntry,\r\n  handleInputChange,\r\n  defaultValue,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      defaultValue={defaultValue ? defaultValue : \"\"}\r\n      control={control}\r\n      name={name}\r\n      rules={rules}\r\n      render={({\r\n        field: { value, onChange, onBlur },\r\n        fieldState: { error },\r\n      }) => (\r\n        <View style={styles.void}>\r\n          <View\r\n            style={[\r\n              styles.inputContainer,\r\n              { borderColor: error ? \"red\" : \"#e8e8e8\" },\r\n            ]}\r\n          >\r\n            <Text style={[styles.label, { color: error ? \"red\" : \"black\" }]}>\r\n              {label}\r\n            </Text>\r\n            <TextInput\r\n              type=\"text\"\r\n              editable={disabled ? false : true}\r\n              value={value}\r\n              onChangeText={(text) => {\r\n                onChange(text);\r\n                if (handleInputChange) {\r\n                  handleInputChange(text);\r\n                }\r\n              }}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              style={styles.input}\r\n              secureTextEntry={secureTextEntry}\r\n            />\r\n          </View>\r\n          {error && (\r\n            <Text style={{ color: \"red\", alignSelf: \"stretch\" }}>\r\n              {error.message || \"Error\"}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomInputText;\r\n","/* Function to search customer by ID */\r\nexport const searchCustomerById = async (\r\n  customerId,\r\n  setErrorMessage,\r\n  setValue\r\n) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/customer/search?id=${customerId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    const body = JSON.parse(data.body);\r\n    if (Array.isArray(body) && body.length > 0) {\r\n      return body[0];\r\n    } else {\r\n      setErrorMessage(\"No customer found with the provided ID\");\r\n      clearCustomerValues(setValue);\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching customer data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const setCustomerValues = (customerData, setValue) => {\r\n  setValue(\"name\", customerData.firstname);\r\n  setValue(\"lastname\", customerData.lastname);\r\n  setValue(\"email\", customerData.email);\r\n  setValue(\"address\", customerData.address);\r\n  setValue(\"phone\", customerData.phone);\r\n};\r\n\r\n/* Function to clear customer values */\r\nexport const clearCustomerValues = (setValue) => {\r\n  /* setValue(\"ci\", \"\"); */\r\n  setValue(\"name\", \"\");\r\n  setValue(\"lastname\", \"\");\r\n  setValue(\"email\", \"\");\r\n  setValue(\"address\", \"\");\r\n  setValue(\"phone\", \"\");\r\n};\r\n\r\n/* Function to get the customer data by id */\r\nexport const getCustomerById = async (customerId) => {\r\n  const url = `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/customer/${customerId}`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(\"Failed to fetch customer data\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching customer data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* Function to update the customer data by id */\r\nexport const updateCustomerData = async (customerId, customerData) => {\r\n  const url = `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/customer/${customerId}`;\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(customerData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(\"Failed to update customer data\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating customer data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n","// Constants file\r\nexport const EMAIL_REGEX =\r\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nexport const RUC_REGEX = /^[0-9]+$/;\r\nexport const PASSWORD_REGEX =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{12,}$/;\r\n","// CustomerDataStep.js\r\nimport React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport styles from \"../../../styles/styles\";\r\nimport CustomInputText from \"../../Inputs/CustomInputText\";\r\nimport CustomButton from \"../../Buttons/CustomButton\";\r\nimport { searchCustomerById, setCustomerValues } from \"../../../utils/customer\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../../utils/constants\";\r\n\r\nconst BillingStep1 = ({\r\n  errorMessage,\r\n  control,\r\n  clearError,\r\n  setErrorMessage,\r\n  setCustomerId,\r\n  customerId,\r\n  onNextPressed,\r\n  handleSubmit,\r\n  setValue,\r\n}) => {\r\n  const handleSearchCustomer = async () => {\r\n    try {\r\n      const data = await searchCustomerById(\r\n        customerId,\r\n        setErrorMessage,\r\n        setValue\r\n      );\r\n      if (data !== null) {\r\n        setCustomerValues(data, setValue);\r\n        setErrorMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Error handling customer search. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text style={[styles.title, { alignSelf: \"center\" }]}>Customer Data</Text>\r\n      <View style={styles.customerDetails}>\r\n        {errorMessage ? <Text style={styles.error}>{errorMessage}</Text> : null}\r\n        <CustomInputText\r\n          name=\"ci\"\r\n          placeholder=\"Insert a CI or RUC\"\r\n          label=\"CI/RUC\"\r\n          control={control}\r\n          handleInputChange={(text) => {\r\n            clearError();\r\n            setCustomerId(text);\r\n          }}\r\n          rules={{\r\n            required: \"CI/RUC is required\",\r\n            pattern: {\r\n              value: RUC_REGEX,\r\n              message: \"RUC should contain only numbers\",\r\n            },\r\n            minLength: {\r\n              value: 10,\r\n              message: \"CI/RUC should be at least 10 digits long\",\r\n            },\r\n            maxLength: {\r\n              value: 13,\r\n              message: \"CI/RUC should be maximum 13 digits long\",\r\n            },\r\n          }}\r\n        />\r\n        <View>\r\n          <CustomButton text={\"Search\"} onPress={handleSearchCustomer} />\r\n        </View>\r\n        <CustomInputText\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          placeholder=\"Insert a name\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Name is required\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Name should be at least 3 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 24,\r\n              message: \"Name should be max 24 characters long\",\r\n            },\r\n          }}\r\n          handleInputChange={(text) => {\r\n            clearError();\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"lastname\"\r\n          label=\"Last Name\"\r\n          placeholder=\"Insert a family name\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Last name is required\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Last name should be at least 3 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 24,\r\n              message: \"Last name should be max 24 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          placeholder=\"Insert an email\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Email is required\",\r\n            pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"phone\"\r\n          label=\"Phone\"\r\n          placeholder=\"Insert a phone\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Phone is required\",\r\n            minLength: {\r\n              value: 7,\r\n              message: \"Phone should be at least 7 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 10,\r\n              message: \"Phone should be max 10 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"address\"\r\n          label=\"Address\"\r\n          placeholder=\"Insert an address\"\r\n          control={control}\r\n          rules={{\r\n            required: \"Address is required\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Name should be at least 3 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 50,\r\n              message: \"Address should be max 50 characters long\",\r\n            },\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <CustomButton text={\"Next\"} onPress={handleSubmit(onNextPressed)} />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingStep1;\r\n","/* Function to load products from db */\r\nexport const loadData = async (setProducts) => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    const body = JSON.parse(data.body);\r\n    const initialProducts = body.map((product) => ({\r\n      ...product,\r\n      quantity: 0,\r\n      appliesIVA: product.prediccion === \"0\" ? false : true,\r\n    }));\r\n    setProducts(initialProducts);\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n  }\r\n};\r\n\r\n/* Function to get the current date */\r\nexport const getCurrentDate = () => {\r\n  var today = new Date();\r\n  var year = today.getFullYear();\r\n  var month = today.getMonth() + 1;\r\n  var day = today.getDate();\r\n  month = month < 10 ? \"0\" + month : month;\r\n  day = day < 10 ? \"0\" + day : day;\r\n  var formattedDate = year + \"-\" + month + \"-\" + day;\r\n  return formattedDate;\r\n};\r\n\r\n/* Function to calculate cash change */\r\nexport const calculateChange = (text, totals, setChange) => {\r\n  if (parseFloat(text) >= totals.total.toFixed(2)) {\r\n    const newChange = parseFloat(text) - totals.total.toFixed(2);\r\n    setChange(newChange.toFixed(2));\r\n  }\r\n};\r\n\r\n/* Function to calculate taxes and totals */\r\nexport const calculateTotals = (selectedProducts, setTotals) => {\r\n  const subtotal = selectedProducts.reduce(\r\n    (total, product) => total + product.price * product.quantity,\r\n    0\r\n  );\r\n  const tariff0 = selectedProducts.reduce(\r\n    (total, product) =>\r\n      !product.appliesIVA ? total + product.price * product.quantity : total,\r\n    0\r\n  );\r\n  const tariff12 = selectedProducts.reduce(\r\n    (total, product) =>\r\n      product.appliesIVA ? total + product.price * product.quantity : total,\r\n    0\r\n  );\r\n  const iva12 = tariff12 * 0.12;\r\n  const total = subtotal + iva12;\r\n  const newTotals = {\r\n    subtotal,\r\n    tariff0,\r\n    tariff12,\r\n    iva12,\r\n    total,\r\n  };\r\n  setTotals(newTotals);\r\n};\r\n\r\n/* Function to add to the invoice */\r\nexport const handleAddToInvoice = (\r\n  productId,\r\n  products,\r\n  selectedProducts,\r\n  setSelectedProducts\r\n) => {\r\n  const productToAdd = products.find((product) => product.id === productId);\r\n  if (productToAdd) {\r\n    const existingProduct = selectedProducts.find(\r\n      (product) => product.id === productId\r\n    );\r\n    if (existingProduct) {\r\n      handleQuantityChange(\r\n        productId,\r\n        existingProduct.quantity + 1,\r\n        selectedProducts,\r\n        setSelectedProducts\r\n      );\r\n    } else {\r\n      const newProduct = { ...productToAdd, quantity: 1 };\r\n      setSelectedProducts([...selectedProducts, newProduct]);\r\n      /* handleRemoveFromFiltered(productId, filteredProducts, setFilteredProducts); */\r\n    }\r\n  }\r\n};\r\n\r\n/* Function to remove selected products from list */\r\nexport const handleRemoveFromFiltered = (\r\n  productId,\r\n  filteredProducts,\r\n  setFilteredProducts\r\n) => {\r\n  const updatedFilteredProducts = filteredProducts.filter(\r\n    (product) => product.id !== productId\r\n  );\r\n  setFilteredProducts(updatedFilteredProducts);\r\n};\r\n\r\n/* Function to handle the quantity */\r\nexport const handleQuantityChange = (\r\n  productId,\r\n  quantity,\r\n  selectedProducts,\r\n  setSelectedProducts\r\n) => {\r\n  const newQuantity = parseInt(quantity);\r\n  if (!isNaN(newQuantity) && newQuantity >= 0) {\r\n    const updatedSelectedProducts = selectedProducts.map((product) => {\r\n      if (product.id === productId) {\r\n        return { ...product, quantity: newQuantity };\r\n      }\r\n      return product;\r\n    });\r\n    setSelectedProducts(updatedSelectedProducts);\r\n  }\r\n};\r\n\r\n/* Function to select the product */\r\nexport const handleProductSelection = (\r\n  product,\r\n  selectedProducts,\r\n  setSelectedProducts,\r\n  products,\r\n  setProducts\r\n) => {\r\n  const existingProductIndex = selectedProducts.findIndex(\r\n    (item) => item.id === product.id\r\n  );\r\n  if (existingProductIndex !== -1) {\r\n    handleQuantityChange(\r\n      product.id,\r\n      product.quantity + 1,\r\n      selectedProducts,\r\n      setSelectedProducts\r\n    );\r\n  } else {\r\n    const newProduct = { ...product, quantity: 1 };\r\n    setSelectedProducts([...selectedProducts, newProduct]);\r\n\r\n    const updatedProducts = products.map((item) =>\r\n      item.id === product.id ? { ...item, quantity: 1 } : item\r\n    );\r\n    setProducts(updatedProducts);\r\n  }\r\n};\r\n\r\n/* Function to clean when submit */\r\nexport const handleSubmitClean = (\r\n  setValue,\r\n  setSelectedProducts,\r\n  setFilteredProducts,\r\n  setChange,\r\n  setPaymentMethod,\r\n  clearError\r\n) => {\r\n  setValue(\"ci\", \"\");\r\n  setValue(\"name\", \"\");\r\n  setValue(\"lastname\", \"\");\r\n  setValue(\"email\", \"\");\r\n  setValue(\"address\", \"\");\r\n  setValue(\"phone\", \"\");\r\n  setSelectedProducts([]);\r\n  setFilteredProducts([]);\r\n  setChange(\"\");\r\n  setPaymentMethod(\"\");\r\n  clearError();\r\n};\r\n\r\n/* Function to remove selected products form cart */\r\nexport const handleRemoveFromInvoice = (\r\n  productId,\r\n  selectedProducts,\r\n  setSelectedProducts\r\n) => {\r\n  const updatedProducts = selectedProducts.filter(\r\n    (product) => product.id !== productId\r\n  );\r\n  setSelectedProducts(updatedProducts);\r\n};\r\n\r\n/* Function to send the invoice to store */\r\nexport const sendBillingData = async (newBillingData) => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/invoices\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newBillingData),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        \"Error al enviar los datos de facturación: \" + response.statusText\r\n      );\r\n    }\r\n\r\n    const responseData = await response.json();\r\n    console.log(\"Respuesta del servidor:\", responseData);\r\n\r\n    return responseData;\r\n  } catch (error) {\r\n    console.error(\"Error al enviar los datos de facturación:\", error);\r\n    throw new Error(\"Error al enviar los datos de facturación\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { handleAddToInvoice } from \"../../utils/billing\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst SearchCart = ({ item, device, products, selectedProducts, setSelectedProducts }) => (\r\n  <View style={styles.void}>\r\n    <View\r\n      style={[\r\n        device === \"web\" ? styles.containerRow : styles.containerCol,\r\n        styles.itemContainer,\r\n      ]}\r\n    >\r\n      <View style={styles.itemDetails}>\r\n        <Text style={styles.itemName}>{item.name}</Text>\r\n        <Text style={styles.itemDescription}>Stock: {item.stock}</Text>\r\n        <Text style={styles.itemDescription}>Price: ${item.price}</Text>\r\n      </View>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          { alignItems: \"center\", justifyContent: \"center\" },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.removeButton}\r\n          onPress={() =>\r\n            handleAddToInvoice(\r\n              item.id,\r\n              products,\r\n              selectedProducts,\r\n              setSelectedProducts\r\n            )\r\n          }\r\n        >\r\n          <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"green\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default SearchCart;","import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { handleRemoveFromInvoice } from \"../../utils/billing\";\r\n\r\nconst SelectedCart = ({\r\n  item,\r\n  device,\r\n  selectedProducts,\r\n  setSelectedProducts,\r\n}) => (\r\n  <View style={styles.void}>\r\n    <View\r\n      style={[\r\n        device === \"web\" ? styles.containerRow : styles.containerCol,\r\n        styles.itemContainer,\r\n        { marginRight: 1 },\r\n      ]}\r\n    >\r\n      <View style={styles.itemDetails}>\r\n        <Text style={styles.itemName}>{item.name}</Text>\r\n        <Text style={styles.itemDescription}>Quantity: {item.quantity}</Text>\r\n      </View>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          { alignItems: \"center\", justifyContent: \"center\" },\r\n        ]}\r\n      >\r\n        <TouchableOpacity\r\n          style={styles.removeButton}\r\n          onPress={() =>\r\n            handleRemoveFromInvoice(\r\n              item.id,\r\n              selectedProducts,\r\n              setSelectedProducts\r\n            )\r\n          }\r\n        >\r\n          <Ionicons name=\"trash-bin-outline\" size={24} color=\"red\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nexport default SelectedCart;\r\n","import React, { useEffect } from \"react\";\r\nimport { View, Text, FlatList, Platform } from \"react-native\";\r\nimport styles from \"../../../styles/styles\";\r\nimport CustomInputText from \"../../Inputs/CustomInputText\";\r\nimport CustomButton from \"../../Buttons/CustomButton\";\r\nimport SearchCart from \"../../Card/CustomSearchCart\";\r\nimport SelectedCart from \"../../Card/CustomSelectedCart\";\r\nimport { loadData } from \"../../../utils/billing\";\r\n\r\nconst BillingStep2 = ({\r\n  errorMessage,\r\n  control,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  filteredProducts,\r\n  setFilteredProducts,\r\n  products,\r\n  setProducts,\r\n  selectedProducts,\r\n  setSelectedProducts,\r\n  onBackPressed,\r\n  onNextPressed,\r\n  handleSubmit\r\n}) => {\r\n  const device = Platform.OS;\r\n  useEffect(() => {\r\n    loadData(setProducts);\r\n  }, []);\r\n  const handleSearch = () => {\r\n    const query = searchQuery.toLowerCase();\r\n    const filtered = products.filter((product) =>\r\n      product.name.toLowerCase().includes(query)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n  return (\r\n    <>\r\n      <View style={[styles.containerCol, { flex: 1, flexDirection: \"column\" }]}>\r\n        <Text style={[styles.title, { alignSelf: \"center\" }]}>\r\n          Select Products\r\n        </Text>\r\n        <View style={styles.customerDetails}>\r\n          {errorMessage ? (\r\n            <Text style={styles.error}>{errorMessage}</Text>\r\n          ) : null}\r\n          <CustomInputText\r\n            name=\"search\"\r\n            placeholder=\"Insert a name or code or just leave empty for list all\"\r\n            label=\"Search\"\r\n            control={control}\r\n            handleInputChange={(text) => setSearchQuery(text)}\r\n          />\r\n          <CustomButton text={\"Search\"} onPress={handleSearch} />\r\n        </View>\r\n        <View style={[styles.containerRow, { width: \"50%\" }]}>\r\n          {filteredProducts.length !== 0 ? (\r\n            <View style={[styles.searchProduct, { height: 400 }]}>\r\n              <FlatList\r\n                data={filteredProducts}\r\n                renderItem={({ item }) => (\r\n                  <SearchCart\r\n                    item={item}\r\n                    device={device}\r\n                    products={products}\r\n                    selectedProducts={selectedProducts}\r\n                    setSelectedProducts={setSelectedProducts}\r\n                  />\r\n                )}\r\n                keyExtractor={(item) => item.id.toString()}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <View style={styles.searchProduct}>\r\n              <Text>Search a product</Text>\r\n            </View>\r\n          )}\r\n          {selectedProducts.length !== 0 ? (\r\n            <View style={[styles.searchProduct, { height: 400 }]}>\r\n              <FlatList\r\n                data={selectedProducts}\r\n                renderItem={({ item }) => (\r\n                  <SelectedCart\r\n                    item={item}\r\n                    device={device}\r\n                    selectedProducts={selectedProducts}\r\n                    setSelectedProducts={setSelectedProducts}\r\n                  />\r\n                )}\r\n                keyExtractor={(item) => item.id.toString()}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <View style={styles.searchProduct}>\r\n              <Text>No products selected</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.containerRow,\r\n            {\r\n              width: \"50%\",\r\n            },\r\n          ]}\r\n        >\r\n          <CustomButton text={\"Back\"} onPress={onBackPressed} />\r\n          <CustomButton text={\"Next\"} onPress={handleSubmit(onNextPressed)} />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingStep2;\r\n","import React from \"react\";\r\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst CustomInputNumber = ({\r\n  control,\r\n  name,\r\n  rules = {},\r\n  placeholder,\r\n  handleInputChange,\r\n  defaultValue,\r\n  disabled,\r\n  showDecimals = true,\r\n  label,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      defaultValue={defaultValue ? defaultValue : \"\"}\r\n      control={control}\r\n      name={name}\r\n      rules={rules}\r\n      render={({\r\n        field: { value, onChange, onBlur },\r\n        fieldState: { error },\r\n      }) => (\r\n        <>\r\n          <View\r\n            style={[\r\n              styles.inputContainer,\r\n              { borderColor: error ? \"red\" : \"#e8e8e8\" },\r\n            ]}\r\n          >\r\n            <Text style={[styles.label, { color: error ? \"red\" : \"black\" }]}>\r\n              {label}\r\n            </Text>\r\n            <TextInput\r\n              type=\"numeric\"\r\n              disabled={disabled ? true : false}\r\n              value={value}\r\n              onChangeText={(text) => {\r\n                const isValidNumber = (text) => {\r\n                  if (showDecimals) {\r\n                    return /^\\d*\\.?\\d*$/.test(text);\r\n                  } else {\r\n                    return /^\\d+$/.test(text);\r\n                  }\r\n                };\r\n                if (isValidNumber(text)) {\r\n                  onChange(text);\r\n                  if (handleInputChange) {\r\n                    handleInputChange(text);\r\n                  }\r\n                }\r\n              }}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              style={styles.input}\r\n              keyboardType=\"numeric\"\r\n            />\r\n          </View>\r\n          {error && (\r\n            <Text style={{ color: \"red\", alignSelf: \"stretch\" }}>\r\n              {error.message || \"Error\"}\r\n            </Text>\r\n          )}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomInputNumber;\r\n","import React, { useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport styles from \"../../../styles/styles\";\r\nimport CustomButton from \"../../Buttons/CustomButton\";\r\nimport CustomInputNumber from \"../../Inputs/CustomInputNumber\";\r\nimport { calculateChange, calculateTotals } from \"../../../utils/billing\";\r\n\r\nconst BillingStep3 = ({\r\n  errorMessage,\r\n  control,\r\n  totals,\r\n  setTotals,\r\n  paymentMethod,\r\n  setPaymentMethod,\r\n  setCashInput,\r\n  selectedProducts,\r\n  change,\r\n  setChange,\r\n  onBackPressed,\r\n  onNextPressed,\r\n  clearError,\r\n  watch,\r\n  handleSubmit\r\n}) => {\r\n  const cash = watch(\"cash\");\r\n  useEffect(() => {\r\n    calculateTotals(selectedProducts, setTotals);\r\n    calculateChange(cash, totals, setChange);\r\n  }, [selectedProducts]);\r\n  const renderPaymentFields = () => {\r\n    if (paymentMethod === \"Cash\") {\r\n      return (\r\n        <>\r\n          <CustomInputNumber\r\n            name=\"cash\"\r\n            placeholder=\"Insert cash value\"\r\n            label=\"Cash\"\r\n            control={control}\r\n            handleInputChange={(text) => {\r\n              clearError();\r\n              setCashInput(text);\r\n              calculateChange(text, totals, setChange);\r\n            }}\r\n          />\r\n          <Text>Change:</Text>\r\n          <Text style={styles.input}>${change ? change : 0}</Text>\r\n        </>\r\n      );\r\n    } else if (paymentMethod === \"Card\" || paymentMethod === \"Transfer\") {\r\n      return (\r\n        <CustomButton\r\n          text={\"Go to payment platform\"}\r\n          type=\"SECONDARY\"\r\n          onPress={() => redirectToPaymentPlatform()}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  return (\r\n    <>\r\n      <Text style={[styles.title, { alignSelf: \"center\" }]}>\r\n        Choose Payment\r\n      </Text>\r\n\r\n      <Text\r\n        style={[\r\n          styles.subtitle,\r\n          { textAlign: \"center\", marginTop: 10, marginBottom: 0 },\r\n        ]}\r\n      >\r\n        Total: ${totals.total.toFixed(2)}\r\n      </Text>\r\n      {errorMessage ? (\r\n        <Text style={[styles.error, { alignSelf: \"center\" }]}>\r\n          {errorMessage}\r\n        </Text>\r\n      ) : null}\r\n      <View style={styles.customerDetails}>\r\n        <CustomButton\r\n          text={\"Cash\"}\r\n          type=\"SECONDARY\"\r\n          onPress={() => setPaymentMethod(\"Cash\")}\r\n        />\r\n        <CustomButton\r\n          text={\"Card\"}\r\n          type=\"SECONDARY\"\r\n          onPress={() => setPaymentMethod(\"Card\")}\r\n        />\r\n        <CustomButton\r\n          text={\"Transfer\"}\r\n          type=\"SECONDARY\"\r\n          onPress={() => setPaymentMethod(\"Transfer\")}\r\n        />\r\n      </View>\r\n      {paymentMethod ? (\r\n        <View style={styles.customerDetails}>{renderPaymentFields()}</View>\r\n      ) : null}\r\n      <View\r\n        style={[\r\n          styles.containerRow,\r\n          {\r\n            width: \"50%\",\r\n          },\r\n        ]}\r\n      >\r\n        <CustomButton text={\"Back\"} onPress={onBackPressed} />\r\n        <CustomButton text={\"Next\"} onPress={handleSubmit(onNextPressed)} />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingStep3;\r\n","import React from \"react\";\r\nimport { View, Text, TextInput } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst ResumeCart = ({ item }) => {\r\n  return (\r\n    <View style={styles.void}>\r\n      <View\r\n        style={[\r\n          styles.containerRow,\r\n          styles.itemContainer,\r\n          { borderWidth: 1, borderColor: \"#ccc\" },\r\n        ]}\r\n      >\r\n        <View style={styles.itemDetails}>\r\n          <Text style={styles.itemName}>{item.name}</Text>\r\n          <Text style={styles.itemDescription}>${item.price.toFixed(2)}</Text>\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.void,\r\n            { alignItems: \"center\", justifyContent: \"center\" },\r\n          ]}\r\n        >\r\n          <TextInput\r\n            editable={false}\r\n            style={styles.quantityInput}\r\n            value={item.quantity.toString()}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ResumeCart;\r\n","import React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport styles from \"../../../styles/styles\";\r\nimport ResumeCart from \"../../Card/CustomResumeCart\";\r\nimport CustomButton from \"../../Buttons/CustomButton\";\r\nimport { getCurrentDate, handleSubmitClean, sendBillingData } from \"../../../utils/billing\";\r\n\r\nconst BillingStep4 = ({\r\n  id,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  phone,\r\n  address,\r\n  selectedProducts,\r\n  setSelectedProducts,\r\n  setFilteredProducts,\r\n  paymentMethod,\r\n  setPaymentMethod,\r\n  change,\r\n  setChange,\r\n  totals,\r\n  onBackPressed,\r\n  setStep,\r\n  clearError,\r\n  handleSubmit,\r\n  setValue,\r\n}) => {\r\n  const onSubmitPressed = async (data) => {\r\n    const date = getCurrentDate();\r\n    const newBilling = {\r\n      date,\r\n      clientData: data,\r\n      valuesTotals: { ...totals, paymentMethod, change },\r\n      products: selectedProducts,\r\n    };\r\n    console.log(newBilling);\r\n    try {\r\n      await sendBillingData(newBilling);\r\n      console.log(\"Datos de facturación enviados con éxito\");\r\n\r\n      handleSubmitClean(\r\n        setValue,\r\n        setSelectedProducts,\r\n        setFilteredProducts,\r\n        setChange,\r\n        setPaymentMethod,\r\n        clearError\r\n      );\r\n      setStep(1);\r\n    } catch (error) {\r\n      console.error(\"Error al enviar los datos de facturación:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.containerCol,\r\n          {\r\n            rowGap: 20,\r\n          },\r\n        ]}\r\n      >\r\n        <Text style={[styles.title, { alignSelf: \"center\" }]}>Resume</Text>\r\n        <View style={styles.customerDetails}>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>CI/RUC:</Text>\r\n            <Text> {id}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Name: </Text>\r\n            <Text> {firstName + \" \" + lastName}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Email:</Text>\r\n            <Text> {email}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Phone:</Text>\r\n            <Text> {phone}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Address:</Text>\r\n            <Text> {address}</Text>\r\n          </Text>\r\n        </View>\r\n        <View style={styles.customerDetails}>\r\n          {selectedProducts.map((product) => (\r\n            <ResumeCart key={product.id} item={product} />\r\n          ))}\r\n        </View>\r\n        <View style={styles.billSummary}>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Method: </Text>\r\n            <Text>{paymentMethod}</Text>\r\n          </Text>\r\n          {paymentMethod === \"Cash\" ? (\r\n            <>\r\n              <Text>\r\n                <Text style={{ fontWeight: \"bold\" }}>Change: </Text>\r\n                <Text>${change}</Text>\r\n              </Text>\r\n            </>\r\n          ) : null}\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Subtotal: </Text>\r\n            <Text>${totals.subtotal.toFixed(2)}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Tariff 0: </Text>\r\n            <Text>${totals.tariff0.toFixed(2)}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Tariff 12: </Text>\r\n            <Text>${totals.tariff12.toFixed(2)}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>IVA: </Text>\r\n            <Text>${totals.iva12.toFixed(2)}</Text>\r\n          </Text>\r\n          <Text>\r\n            <Text style={{ fontWeight: \"bold\" }}>Total: </Text>\r\n            <Text>${totals.total.toFixed(2)}</Text>\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={[\r\n            styles.containerRow,\r\n            {\r\n              width: \"50%\",\r\n            },\r\n          ]}\r\n        >\r\n          <CustomButton text={\"Back\"} onPress={onBackPressed} />\r\n          <CustomButton text={\"Send\"} onPress={handleSubmit(onSubmitPressed)} />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingStep4;\r\n","import React, { useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useError } from \"../../context/ErrorContext\";\r\nimport BillingStep1 from \"./Billing/BillingStep1\";\r\nimport BillingStep2 from \"./Billing/BillingStep2\";\r\nimport BillingStep3 from \"./Billing/BillingStep3\";\r\nimport BillingStep4 from \"./Billing/BillingStep4\";\r\n\r\nconst BillingStepper = () => {\r\n  const { control, handleSubmit, watch, setValue } = useForm();\r\n  const { errorMessage, setErrorMessage, clearError } = useError();\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({});\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const [totals, setTotals] = useState({\r\n    subtotal: 0,\r\n    tariff0: 0,\r\n    tariff12: 0,\r\n    iva12: 0,\r\n    total: 0,\r\n  });\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [cashInput, setCashInput] = useState(\"\");\r\n  const [change, setChange] = useState(0);\r\n\r\n  const handleNextStep = (data) => {\r\n    setFormData({ ...formData, ...data });\r\n    setStep(step + 1);\r\n  };\r\n\r\n  const handlePreviousStep = () => {\r\n    clearError();\r\n    setStep(step - 1);\r\n  };\r\n\r\n  const handleBillingStepChange = (data) => {\r\n    clearError();\r\n    setFormData({ ...formData, ...data });\r\n    setStep(step + 1);\r\n  };\r\n\r\n  const handleBillingStepSubmit = (data) => {\r\n    if (step === 1) {\r\n      clearError();\r\n      setCustomerId(data.customerId);\r\n      setStep(step + 1);\r\n    } else if (step === 2) {\r\n      if (selectedProducts.length === 0) {\r\n        setErrorMessage(\"Please add at least one product to the invoice\");\r\n      } else {\r\n        clearError();\r\n        setStep(step + 1);\r\n      }\r\n    } else if (step === 3) {\r\n      if (paymentMethod !== \"\") {\r\n        if (paymentMethod === \"Cash\" && cashInput !== \"\") {\r\n          if (parseFloat(cashInput) >= totals.total.toFixed(2)) {\r\n            clearError();\r\n            setStep(step + 1);\r\n          } else {\r\n            setErrorMessage(\"Put an amount higher than total\");\r\n          }\r\n        } else {\r\n          setErrorMessage(\"Put a cash value\");\r\n        }\r\n        paymentMethod !== \"Cash\" && setStep(step + 1);\r\n      } else {\r\n        setErrorMessage(\"Choose a payment method\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {step === 1 && (\r\n        <BillingStep1\r\n          errorMessage={errorMessage}\r\n          control={control}\r\n          clearError={clearError}\r\n          setErrorMessage={setErrorMessage}\r\n          setCustomerId={setCustomerId}\r\n          onNextPressed={handleBillingStepChange}\r\n          handleSubmit={handleSubmit}\r\n          setValue={setValue}\r\n          customerId={customerId}\r\n        />\r\n      )}\r\n      {step === 2 && (\r\n        <BillingStep2\r\n          errorMessage={errorMessage}\r\n          control={control}\r\n          searchQuery={searchQuery}\r\n          setSearchQuery={setSearchQuery}\r\n          filteredProducts={filteredProducts}\r\n          setFilteredProducts={setFilteredProducts}\r\n          products={products}\r\n          setProducts={setProducts}\r\n          selectedProducts={selectedProducts}\r\n          setSelectedProducts={setSelectedProducts}\r\n          onBackPressed={handlePreviousStep}\r\n          onNextPressed={handleBillingStepSubmit}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      )}\r\n      {step === 3 && (\r\n        <BillingStep3\r\n          errorMessage={errorMessage}\r\n          control={control}\r\n          totals={totals}\r\n          setTotals={setTotals}\r\n          paymentMethod={paymentMethod}\r\n          setPaymentMethod={setPaymentMethod}\r\n          setCashInput={setCashInput}\r\n          selectedProducts={selectedProducts}\r\n          change={change}\r\n          setChange={setChange}\r\n          onBackPressed={handlePreviousStep}\r\n          onNextPressed={handleBillingStepSubmit}\r\n          clearError={clearError}\r\n          watch={watch}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      )}\r\n      {step === 4 && (\r\n        <BillingStep4\r\n          id={customerId}\r\n          firstName={formData.name}\r\n          lastName={formData.lastname}\r\n          email={formData.email}\r\n          phone={formData.phone}\r\n          address={formData.address}\r\n          selectedProducts={selectedProducts}\r\n          setSelectedProducts={setSelectedProducts}\r\n          setFilteredProducts={setFilteredProducts}\r\n          setChange={setChange}\r\n          setPaymentMethod={setPaymentMethod}\r\n          paymentMethod={paymentMethod}\r\n          change={change}\r\n          totals={totals}\r\n          onBackPressed={handlePreviousStep}\r\n          setStep={setStep}\r\n          clearError={clearError}\r\n          handleSubmit={handleSubmit}\r\n          setValue={setValue}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default BillingStepper;\r\n","import React from \"react\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nimport BillingStepper from \"../../components/Steper/BillingStepper\";\r\n\r\nconst BillingScreen = () => {\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          { flex: 1, justifyContent: \"center\", alignContent: \"flex-end\" },\r\n        ]}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <BillingStepper />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default BillingScreen;\r\n","import React from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport CustomDrawer from \"../components/Drawer/CustomDrawer\";\r\nimport HomeScreen from \"../screens/AppScreens/HomeScreen\";\r\nimport SuppliersScreen from \"../screens/AppScreens/SuppliersScreen\";\r\nimport AccountingScreen from \"../screens/AppScreens/AccountingScreen\";\r\nimport InventoryScreen from \"../screens/AppScreens/InventoryScreen\";\r\nimport ClientsScreen from \"../screens/AppScreens/ClientsScreen\";\r\nimport SettingsScreen from \"../screens/AppScreens/SettingsScreen\";\r\nimport BillingScreen from \"../screens/AppScreens/BillingScreen\";\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction SideNavigation() {\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerLockMode={\"locked-closed\"}\r\n      drawerContent={(props) => <CustomDrawer {...props} />}\r\n      initialRouteName=\"Dashboard\"\r\n      screenOptions={{\r\n        drawerStyle: {\r\n          backgroundColor: \"#fff\",\r\n          width: 250,\r\n        },\r\n        headerStyle: {\r\n          backgroundColor: \"#531158\",\r\n        },\r\n        headerTintColor: \"#fff\",\r\n        headerTitleAlign: \"center\",\r\n        headerTitleStyle: {\r\n          fontWeight: \"bold\",\r\n        },\r\n        drawerActiveTintColor: \"#fff\",\r\n        drawerActiveBackgroundColor: \"#531158\",\r\n        drawerInactiveTintColor: \"#333\",\r\n        drawerLabelStyle: {\r\n          marginLeft: -25,\r\n        },\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Dashboard\"\r\n        options={{\r\n          drawerLabel: \"Dashboard\",\r\n          title: \"Dashboard\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"home-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={HomeScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Inventory\"\r\n        options={{\r\n          drawerLabel: \"Inventory\",\r\n          title: \"Inventory\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"archive-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={InventoryScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Suppliers\"\r\n        options={{\r\n          drawerLabel: \"Suppliers\",\r\n          title: \"Suppliers\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"briefcase-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={SuppliersScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Clients\"\r\n        options={{\r\n          drawerLabel: \"Clients\",\r\n          title: \"Clients\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"people-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={ClientsScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Billing\"\r\n        options={{\r\n          drawerLabel: \"Billing\",\r\n          title: \"Billing\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"basket-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={BillingScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Accounting\"\r\n        options={{\r\n          drawerLabel: \"Accounting\",\r\n          title: \"Accounting\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"calculator-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={AccountingScreen}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Settings\"\r\n        options={{\r\n          drawerLabel: \"Settings\",\r\n          title: \"Settings\",\r\n          drawerIcon: ({ color }) => (\r\n            <Ionicons name=\"settings-outline\" size={24} color={color} />\r\n          ),\r\n        }}\r\n        component={SettingsScreen}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nexport default SideNavigation;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n\r\nconst CustomPicker = ({\r\n  control,\r\n  name,\r\n  rules = {},\r\n  defaultValue,\r\n  able,\r\n  options = [],\r\n  setIndex,\r\n}) => {\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={defaultValue || options[-1]}\r\n      rules={rules}\r\n      render={({\r\n        field: { value, onChange, onBlur },\r\n        fieldState: { error },\r\n      }) => (\r\n        <>\r\n          <View\r\n            style={[\r\n              styles.container,\r\n              { borderColor: error ? \"red\" : \"#e8e8e8\" },\r\n            ]}\r\n          >\r\n            <Picker\r\n              enabled={able}\r\n              style={styles.input}\r\n              selectedValue={value}\r\n              onValueChange={(selectedValue, selectedIndex) => {\r\n                setIndex\r\n                  ? (onChange(selectedValue), setIndex(selectedIndex))\r\n                  : onChange(selectedValue);\r\n              }}\r\n            >\r\n              <Picker.Item key={0} label={\"Select an option\"} value={0} />\r\n              {options.map((value, index) => {\r\n                return <Picker.Item key={index} label={value} value={value} />;\r\n              })}\r\n            </Picker>\r\n          </View>\r\n          {error && (\r\n            <Text style={{ color: \"red\", alignSelf: \"stretch\" }}>\r\n              {error.message || \"Error\"}\r\n            </Text>\r\n          )}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n\r\n    borderColor: \"#e8e8e8\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n\r\n    paddingHorizontal: 0,\r\n    marginVertical: 5,\r\n  },\r\n  input: {},\r\n});\r\n\r\nexport default CustomPicker;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport CustomPicker from \"../Pickers/CustomPicker\";\r\nimport { addClient } from \"../../utils/database\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport { useState } from \"react\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../utils/constants\";\r\n\r\nconst NewClientForm = ({ route }) => {\r\n  const { control, handleSubmit, watch } = useForm();\r\n  const { goBack } = useNavigate();\r\n  const [idType, setIdType] = useState(0);\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    await addClient(data, idType);\r\n    route.params.updateClients();\r\n    goBack();\r\n  };\r\n\r\n  const onBackPressed = () => {\r\n    goBack();\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Register New Client</Text>\r\n        <View style={styles.customerDetails}>\r\n          <CustomPicker\r\n            name=\"tid\"\r\n            able={true}\r\n            options={[\"RUC\", \"CI\"]}\r\n            defaultValue={\"RUC\"}\r\n            control={control}\r\n            setIndex={setIdType}\r\n            rules={{ required: \"Type identification is required\" }}\r\n          />\r\n          {watch(\"tid\") === \"CI\" ? (\r\n            <CustomInputText\r\n              placeholder=\"Insert a citizenship card number\"\r\n              name=\"id\"\r\n              label=\"CI\"\r\n              control={control}\r\n              rules={{\r\n                required: \"CI is required\",\r\n                pattern: {\r\n                  value: RUC_REGEX,\r\n                  message: \"RUC should contain only numbers\",\r\n                },\r\n                minLength: {\r\n                  value: 10,\r\n                  message: \"CI should be at least 10 digits long\",\r\n                },\r\n                maxLength: {\r\n                  value: 10,\r\n                  message: \"CI should be maximum 10 digits long\",\r\n                },\r\n              }}\r\n            />\r\n          ) : (\r\n            <CustomInputText\r\n              placeholder=\"Insert a RUC\"\r\n              name=\"id\"\r\n              label=\"RUC\"\r\n              control={control}\r\n              rules={{\r\n                required: \"RUC is required\",\r\n                pattern: {\r\n                  value: RUC_REGEX,\r\n                  message: \"RUC should contain only numbers\",\r\n                },\r\n                minLength: {\r\n                  value: 13,\r\n                  message: \"RUC should be at least 13 digits long\",\r\n                },\r\n                maxLength: {\r\n                  value: 13,\r\n                  message: \"RUC should be maximum 13 digits long\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n          <CustomInputText\r\n            placeholder=\"Insert a name\"\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert a family name\"\r\n            name=\"lastname\"\r\n            label=\"Last Name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Last name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Last name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Last name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Email is required\",\r\n              pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the phone\"\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Phone is required\",\r\n              minLength: {\r\n                value: 7,\r\n                message: \"Phone should be at least 7 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 10,\r\n                message: \"Phone should be max 10 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Address is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 50,\r\n                message: \"Address should be max 50 characters long\",\r\n              },\r\n            }}\r\n          />\r\n        </View>\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n        <CustomButton text=\"Back\" onPress={onBackPressed} type=\"PRIMARY\" />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewClientForm;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport CustomPicker from \"../Pickers/CustomPicker\";\r\nimport { addSupplier } from \"../../utils/database\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport styles from \"../../styles/styles\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../utils/constants\";\r\n\r\nconst NewSupplierForm = ({ route }) => {\r\n  const { control, handleSubmit } = useForm();\r\n  const { goBack, goTo } = useNavigate();\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    data.tid = 1;\r\n    const added = await addSupplier(data);\r\n    if (added) {\r\n      route.params.updateSuppliers();\r\n      goBack();\r\n    } else {\r\n      alert(\"Failed to add supplier\");\r\n    }\r\n  };\r\n\r\n  const onBackPressed = () => {\r\n    goBack();\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Register New Supplier</Text>\r\n        <View style={styles.customerDetails}>\r\n          <CustomPicker\r\n            able={false}\r\n            options={[\"RUC\", \"CI\"]}\r\n            name=\"tid\"\r\n            defaultValue={\"RUC\"}\r\n            control={control}\r\n            rules={{ required: \"Type identification is required\" }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"ID\"\r\n            name=\"id\"\r\n            label={\"RUC\"}\r\n            control={control}\r\n            rules={{\r\n              required: \"RUC is required\",\r\n              pattern: {\r\n                value: RUC_REGEX,\r\n                message: \"RUC should contain only numbers\",\r\n              },\r\n              minLength: {\r\n                value: 13,\r\n                message: \"RUC should be at least 13 digits long\",\r\n              },\r\n              maxLength: {\r\n                value: 13,\r\n                message: \"RUC should be maximum 13 digits long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Commercial Name\"\r\n            name=\"commercial\"\r\n            label={\"Commercial Name\"}\r\n            control={control}\r\n            rules={{\r\n              required: \"Commercial name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            label={\"First Name\"}\r\n            control={control}\r\n            rules={{\r\n              required: \"Name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Lastname\"\r\n            name=\"lastname\"\r\n            label={\"Last Name\"}\r\n            control={control}\r\n            rules={{\r\n              required: \"Lastname is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Last name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Last name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Email is required\",\r\n              pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the phone\"\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Phone is required\",\r\n              minLength: {\r\n                value: 7,\r\n                message: \"Phone should be at least 7 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 10,\r\n                message: \"Phone should be max 10 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Address is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 50,\r\n                message: \"Address should be max 50 characters long\",\r\n              },\r\n            }}\r\n          />\r\n        </View>\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewSupplierForm;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport CustomPicker from \"../Pickers/CustomPicker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport {\r\n  addProductToInventory,\r\n  fetchData,\r\n  getDataByCategory,\r\n} from \"../../utils/database\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport CustomInputNumber from \"../Inputs/CustomInputNumber\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst NewProductForm = ({ route }) => {\r\n  const { control, handleSubmit, watch, setValue } = useForm();\r\n  const { goTo, goBack } = useNavigate();\r\n  const [categories, setCategories] = useState([]);\r\n  const [idCategory, setIdCategory] = useState(0);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [idSupplier, setIdSupplier] = useState(0);\r\n  const [types, setTypes] = useState([]);\r\n  const [idType, setIdType] = useState(0);\r\n  const [idUnit, setIdUnit] = useState(0);\r\n  const price = watch(\"price\");\r\n  const category = watch(\"category\");\r\n\r\n  useEffect(() => {\r\n    load_data_sup();\r\n    load_data_cat();\r\n    load_data_type();\r\n    getSuggestedPrice(price);\r\n    if (idCategory !== 0) {\r\n      getInternalCode(category, idCategory);\r\n    }\r\n  }, [price, category, idCategory]);\r\n\r\n  const load_data_sup = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/suppliers\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      const array = body.map((item) => item.commercial);\r\n      setSuppliers(array);\r\n    } catch (error) {\r\n      console.error(\"Error fetching supplier data:\", error);\r\n    }\r\n  };\r\n\r\n  const load_data_cat = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/categories\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      const array = body.map((item) => item.name);\r\n      setCategories(array);\r\n    } catch (error) {\r\n      console.error(\"Error fetching category data:\", error);\r\n    }\r\n  };\r\n\r\n  const load_data_type = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/types\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      const array = body.map((item) => item.name);\r\n      setTypes(array);\r\n    } catch (error) {\r\n      console.error(\"Error fetching type data:\", error);\r\n    }\r\n  };\r\n\r\n  const extractInitials = (categoryName) => {\r\n    const words = categoryName.split(\" \");\r\n    const initials = words.map((word) => word.charAt(0)).join(\"\");\r\n    return initials.toUpperCase();\r\n  };\r\n\r\n  const getInternalCode = async (id) => {\r\n    if (category) {\r\n      const sugCode = extractInitials(category);\r\n      const quantity = await getDataByCategory(idCategory);\r\n      const newQuantity = Number(quantity) + 1;\r\n      setValue(\"intcod\", sugCode + \"-\" + newQuantity);\r\n    }\r\n  };\r\n\r\n  const getSuggestedPrice = (price) => {\r\n    if (price) {\r\n      const sugPrice = (price * 1.3).toFixed(2);\r\n      setValue(\"sugprice\", sugPrice);\r\n    }\r\n  };\r\n\r\n  const updateSuppliers = () => {\r\n    load_data_sup();\r\n  };\r\n\r\n  const updateCategories = () => {\r\n    load_data_cat();\r\n  };\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    try {\r\n      await addProductToInventory(data, idCategory, idSupplier, idType, idUnit);\r\n      route.params.updateProducts();\r\n      goBack();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const onBackPressed = () => {\r\n    goBack();\r\n  };\r\n\r\n  const onNewSupplierPressed = () => {\r\n    goTo(\"NewSupplier\", { updateSuppliers });\r\n  };\r\n\r\n  const onNewCategoryPressed = () => {\r\n    goTo(\"NewCategory\", { updateCategories });\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Register New Product</Text>\r\n        <CustomInputText\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          label={\"Name\"}\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n        />\r\n        <Text style={{ fontWeight: \"bold\" }}>Choose a supplier: </Text>\r\n        <CustomPicker\r\n          name=\"supplier\"\r\n          able={true}\r\n          options={suppliers}\r\n          control={control}\r\n          setIndex={setIdSupplier}\r\n          rules={{ required: \"Supplier is required\" }}\r\n        />\r\n        <CustomButton text=\"Add New Supplier\" onPress={onNewSupplierPressed} />\r\n        <CustomInputText\r\n          placeholder=\"Code Supplier\"\r\n          name=\"supcod\"\r\n          label={\"Supplier Code\"}\r\n          control={control}\r\n        />\r\n        <Text style={{ fontWeight: \"bold\" }}>Choose a category: </Text>\r\n        <CustomPicker\r\n          name=\"category\"\r\n          able={true}\r\n          options={categories}\r\n          control={control}\r\n          setIndex={setIdCategory}\r\n          rules={{ required: \"Category is required\" }}\r\n        />\r\n        <CustomButton text=\"Add New Category\" onPress={onNewCategoryPressed} />\r\n        <CustomInputText\r\n          disabled\r\n          placeholder=\"Internal Code\"\r\n          name=\"intcod\"\r\n          label={\"Internal Code\"}\r\n          control={control}\r\n          editable={false}\r\n          rules={{ required: \"Code is required\" }}\r\n        />\r\n        <CustomInputNumber\r\n          placeholder=\"Price\"\r\n          name=\"price\"\r\n          label=\"Price\"\r\n          type={\"number\"}\r\n          valueAsNumber\r\n          showDecimals={true}\r\n          control={control}\r\n          rules={{\r\n            required: \"Price is required\",\r\n            pattern: {\r\n              value: /^\\d*\\.?\\d*$/,\r\n              message: \"Only numbers allowed\",\r\n            },\r\n          }}\r\n        />\r\n\r\n        <CustomInputNumber\r\n          disabled\r\n          placeholder=\"Suggested Price\"\r\n          name=\"sugprice\"\r\n          label=\"Suggested Price\"\r\n          control={control}\r\n          editable={false}\r\n          rules={{\r\n            required: \"Suggested price is required\",\r\n            pattern: {\r\n              value: /^\\d*\\.?\\d*$/,\r\n              message: \"Only numbers allowed\",\r\n            },\r\n          }}\r\n        />\r\n\r\n        <CustomInputNumber\r\n          placeholder=\"Stock\"\r\n          name=\"stock\"\r\n          label=\"Stock\"\r\n          control={control}\r\n          type={\"number\"}\r\n          showDecimals={false}\r\n          rules={{\r\n            required: \"Stock is required\",\r\n            pattern: {\r\n              value: /^[0-9]*$/,\r\n              message: \"Only numbers allowed\",\r\n            },\r\n          }}\r\n        />\r\n        <Text style={{ fontWeight: \"bold\" }}>Choose a unit: </Text>\r\n        <CustomPicker\r\n          name=\"unit\"\r\n          able={true}\r\n          options={[\r\n            \"Meters\",\r\n            \"Liters\",\r\n            \"Gallons\",\r\n            \"Units\",\r\n            \"Kilograms\",\r\n            \"Pounds\",\r\n            \"Inches\",\r\n            \"Centimeters\",\r\n            \"Milliliters\",\r\n            \"Fluid Ounces\",\r\n          ]}\r\n          /* const unidadesDeMedida = ['Metros', 'Litros', 'Galones', 'Unidades', 'Kilogramos', 'Libras', 'Pulgadas', 'Centímetros', 'Mililitros', 'Onzas líquidas'];\r\n           */\r\n          control={control}\r\n          setIndex={setIdUnit}\r\n          rules={{ required: \"Unit is required\" }}\r\n        />\r\n        <Text style={{ fontWeight: \"bold\" }}>Choose a type: </Text>\r\n        <CustomPicker\r\n          name=\"type\"\r\n          able={true}\r\n          options={types}\r\n          control={control}\r\n          setIndex={setIdType}\r\n          rules={{ required: \"Type is required\" }}\r\n        />\r\n        <CustomInputText\r\n          placeholder=\"Details\"\r\n          name=\"details\"\r\n          label={\"Details\"}\r\n          control={control}\r\n          rules={{}}\r\n        />\r\n        <CustomInputText\r\n          placeholder=\"Image\"\r\n          name=\"image\"\r\n          label={\"Image\"}\r\n          control={control}\r\n          rules={{}}\r\n        />\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewProductForm;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomInput from \"../Inputs/CustomInput\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../utils/constants\";\r\nimport { fetchData } from \"../../utils/database\";\r\n\r\nconst Company = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { control, handleSubmit, setValue } = useForm();\r\n  const { goBack } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setValue(\"ruc\", user.payload[\"cognito:username\"]);\r\n    setValue(\"email\", user.payload.email);\r\n    setValue(\"phone\", \"1234567\");\r\n    loadData();\r\n  }, [setValue]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      console.log(user.payload);\r\n      setValue(\"commercial\", body.commercial);\r\n      setValue(\"address\", body.address);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const onSubmitPressed = /* async */ (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <View style={styles.customerDetails}>\r\n          <CustomInputText\r\n            disabled\r\n            name=\"ruc\"\r\n            label=\"RUC\"\r\n            control={control}\r\n            rules={{\r\n              required: \"RUC is required\",\r\n              pattern: {\r\n                value: RUC_REGEX,\r\n                message: \"RUC should contain only numbers\",\r\n              },\r\n              minLength: {\r\n                value: 13,\r\n                message: \"RUC should be at least 13 digits long\",\r\n              },\r\n              maxLength: {\r\n                value: 13,\r\n                message: \"RUC should be maximum 13 digits long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            placeholder=\"Insert the commercial name\"\r\n            name=\"commercial\"\r\n            label=\"Commercial Name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Comercial name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            placeholder=\"Insert the email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Email is required\",\r\n              pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            placeholder=\"Insert the phone\"\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Phone is required\",\r\n              minLength: {\r\n                value: 7,\r\n                message: \"Phone should be at least 7 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 10,\r\n                message: \"Phone should be max 10 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            placeholder=\"Insert the address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Address is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 50,\r\n                message: \"Address should be max 50 characters long\",\r\n              },\r\n            }}\r\n          />\r\n        </View>\r\n        {/* <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} /> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","/* Function to get supplier data by id */\r\nexport const getSupplierById = async (supplierId) => {\r\n  const url = `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/suppliers/${supplierId}`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(\"Failed to fetch supplier data\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching supplier data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* Function to update supplier data by id */\r\nexport const updateSupplierData = async (supplierId, supplierData) => {\r\n  const url = `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/suppliers/${supplierId}`;\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(supplierData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return data;\r\n    } else {\r\n      throw new Error(\"Failed to update supplier data\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error updating supplier data:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* Function to set supplier values */\r\nexport const setSupplierValues = (supplierData, setValue) => {\r\n  setValue(\"commercial\", supplierData.commercial);\r\n  setValue(\"name\", supplierData.firstname);\r\n  setValue(\"lastname\", supplierData.lastname);\r\n  setValue(\"email\", supplierData.email);\r\n  setValue(\"address\", supplierData.address);\r\n  setValue(\"phone\", supplierData.phone);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useError } from \"../../context/ErrorContext\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport {\r\n  getCustomerById,\r\n  setCustomerValues,\r\n  updateCustomerData,\r\n} from \"../../utils/customer\";\r\nimport {\r\n  getSupplierById,\r\n  setSupplierValues,\r\n  updateSupplierData,\r\n} from \"../../utils/supplier\";\r\n\r\nconst ProfileScreen = ({ route }) => {\r\n  const { goBack } = useNavigate();\r\n  const { errorMessage, setErrorMessage, clearError } = useError();\r\n  const { control, handleSubmit, setValue } = useForm();\r\n  const { person } = route.params;\r\n\r\n  useEffect(() => {\r\n    loadData(person);\r\n  }, [person]);\r\n\r\n  const loadData = async (person) => {\r\n    try {\r\n      if (person.ruc) {\r\n        const data = await getSupplierById(person.id);\r\n        const body = JSON.parse(data.body);\r\n        setValue(\"ci\", person.ruc);\r\n        setSupplierValues(body[0], setValue);\r\n      }\r\n      if (person.ci) {\r\n        const data = await getCustomerById(person.id);\r\n        const body = JSON.parse(data.body);\r\n        setValue(\"ci\", person.ci);\r\n        setCustomerValues(body[0], setValue);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    try {\r\n      let updatedProduct;\r\n      if (person.ruc) {\r\n        updatedProduct = await updateSupplierData(person.id, data);\r\n      }\r\n      if (person.ci) {\r\n        updatedProduct = await updateCustomerData(person.id, data);\r\n      }\r\n      console.log(\"Data updated:\", updatedProduct);\r\n      route.params.refresher();\r\n      goBack();\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar el producto:\", error.message);\r\n      setErrorMessage(\r\n        \"Error al actualizar el producto. Por favor, inténtalo de nuevo.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <View style={styles.customerDetails}>\r\n          {errorMessage ? (\r\n            <Text style={styles.error}>{errorMessage}</Text>\r\n          ) : null}\r\n          {person.ruc ? (\r\n            <>\r\n              <CustomInputText\r\n                name=\"ci\"\r\n                placeholder=\"Insert a RUC\"\r\n                label=\"RUC\"\r\n                control={control}\r\n                disabled\r\n                rules={{ required: \"RUC is required\" }}\r\n              />\r\n              <CustomInputText\r\n                placeholder=\"Insert a commercial name\"\r\n                label=\"Commercial Name\"\r\n                name=\"commercial\"\r\n                control={control}\r\n                rules={{ required: \"Commercial name is required\" }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <CustomInputText\r\n              name=\"ci\"\r\n              placeholder=\"Insert a CI or RUC\"\r\n              label=\"CI/RUC\"\r\n              control={control}\r\n              disabled\r\n              rules={{ required: \"CI/RUC is required\" }}\r\n            />\r\n          )}\r\n          <CustomInputText\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            placeholder=\"Insert a name\"\r\n            control={control}\r\n            rules={{ required: \"Name is required\" }}\r\n          />\r\n          <CustomInputText\r\n            name=\"lastname\"\r\n            label=\"Last Name\"\r\n            placeholder=\"Insert a family name\"\r\n            control={control}\r\n            rules={{ required: \"Last name is required\" }}\r\n          />\r\n          <CustomInputText\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Insert an email\"\r\n            control={control}\r\n            rules={{ required: \"Email is required\" }}\r\n          />\r\n          <CustomInputText\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            placeholder=\"Insert a phone\"\r\n            control={control}\r\n            rules={{ required: \"Phone is required\" }}\r\n          />\r\n          <CustomInputText\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            placeholder=\"Insert an address\"\r\n            control={control}\r\n            rules={{ required: \"Address is required\" }}\r\n          />\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <CustomButton text={\"Save\"} onPress={handleSubmit(onSubmitPressed)} />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport { addCategory } from \"../../utils/database\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst NewCategoryForm = ({ route }) => {\r\n  const { control, handleSubmit } = useForm();\r\n  const { goBack } = useNavigate();\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    await addCategory(data);\r\n    route.params.updateCategories();\r\n    goBack();\r\n  };\r\n\r\n  const onBackPressed = () => {\r\n    goBack();\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Category</Text>\r\n        <CustomInputText\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          label={\"Category Name\"}\r\n          control={control}\r\n          rules={{ required: \"Name is required\" }}\r\n        />\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewCategoryForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport styles from \"../../styles/styles\";\r\nimport { fetchData } from \"../../utils/database\";\r\n\r\nconst AccountsScreen = () => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const { goTo, goBack } = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/accounts\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      const sortedAccounts = body.sort((a, b) => {\r\n        if (a.codigo_cuenta < b.codigo_cuenta) return -1;\r\n        if (a.codigo_cuenta > b.codigo_cuenta) return 1;\r\n        return 0;\r\n      });\r\n      setAccounts(sortedAccounts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const updateList = () => {\r\n    loadData();\r\n  };\r\n\r\n  const addAccount = () => {\r\n    goTo(\"NewAccount\", { updateList });\r\n  };\r\n\r\n  const editAccount = (item) => {\r\n    goTo(\"EditAccount\", { item, updateList });\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.itemTable}>\r\n      <Text style={styles.cellTable}>{item.codigo_cuenta}</Text>\r\n      <Text style={[styles.cellTable, styles.nameTable]}>\r\n        {item.nombre_cuenta}\r\n      </Text>\r\n      <View style={styles.cellRowTable}>\r\n        <TouchableOpacity\r\n          style={styles.removeButton}\r\n          onPress={() => editAccount(item)}\r\n        >\r\n          <MaterialCommunityIcons\r\n            name=\"progress-pencil\"\r\n            size={24}\r\n            color=\"black\"\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  if (!accounts) {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.root,\r\n          { alignItems: \"center\", justifyContent: \"center\", flex: 1 },\r\n        ]}\r\n      >\r\n        <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n    >\r\n      <View style={styles.container}>\r\n        <CustomButton text={\"New\"} onPress={addAccount} />\r\n        <View style={[styles.containerTable, { marginTop: 10 }]}>\r\n          <View style={styles.headerTable}>\r\n            <Text style={styles.headerTextTable}>Código</Text>\r\n            <Text style={styles.headerTextTable}>Nombre</Text>\r\n            <Text style={styles.headerTextTable}>Actions</Text>\r\n          </View>\r\n          <FlatList\r\n            data={accounts}\r\n            renderItem={renderItem}\r\n            keyExtractor={(item) => item.id_cuenta.toString()}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default AccountsScreen;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport styles from \"../../styles/styles\";\r\nimport { getCurrentDate } from \"../../utils/billing\";\r\n\r\nconst JournalScreen = () => {\r\n  const [journalEntries, setJournalEntries] = useState([\r\n    {\r\n      id: 1,\r\n      date: \"2023-12-01\",\r\n      account: \"Caja\",\r\n      invoice: \"INV-001\",\r\n      details: \"Detalles de la transacción 1...\",\r\n    },\r\n    {\r\n      id: 2,\r\n      date: \"2023-12-02\",\r\n      account: \"Bancos\",\r\n      invoice: \"INV-002\",\r\n      details: \"Detalles de la transacción 2...\",\r\n    },\r\n    // Add more journal entries as needed...\r\n  ]);\r\n\r\n  const [expandedEntry, setExpandedEntry] = useState(null);\r\n\r\n  const toggleExpanded = (id) => {\r\n    setExpandedEntry(expandedEntry === id ? null : id);\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.itemTable}>\r\n      <View style={{ flexDirection: \"column\", width: \"100%\" }}>\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Text style={styles.cellTable}>{item.date}</Text>\r\n          <Text style={styles.cellTable}>{item.invoice}</Text>\r\n          <View style={styles.cellRowTable}>\r\n            <TouchableOpacity\r\n              style={styles.removeButton}\r\n              onPress={() => toggleExpanded(item.id)}\r\n            >\r\n              {expandedEntry === item.id ? (\r\n                <MaterialCommunityIcons\r\n                  name=\"minus-circle-outline\"\r\n                  size={24}\r\n                  color=\"black\"\r\n                />\r\n              ) : (\r\n                <MaterialCommunityIcons\r\n                  name=\"plus-circle-outline\"\r\n                  size={24}\r\n                  color=\"black\"\r\n                />\r\n              )}\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View style={{ justifyContent: \"row\" }}>\r\n          {expandedEntry === item.id && (\r\n            <View style={styles.customerDetails}>\r\n              <Text>Account: {item.account}</Text>\r\n              <Text>Details: {item.details}</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.customerDetails}>\r\n        <View style={styles.headerTable}>\r\n          <Text style={styles.headerTextTable}>Date</Text>\r\n          <Text style={styles.headerTextTable}>Document</Text>\r\n          <Text style={styles.headerTextTable}>More</Text>\r\n        </View>\r\n        <FlatList\r\n          data={journalEntries}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id.toString()}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default JournalScreen;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, FlatList, StyleSheet } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst LedgerScreen = () => {\r\n  const [ledgerEntries, setLedgerEntries] = useState([\r\n    {\r\n      id: 1,\r\n      account: \"Caja\",\r\n      debit: 1000,\r\n      credit: 0,\r\n    },\r\n    {\r\n      id: 2,\r\n      account: \"Ventas\",\r\n      debit: 0,\r\n      credit: 1500,\r\n    },\r\n    // Add more ledger entries as needed...\r\n  ]);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.itemTable}>\r\n      <Text style={styles.cellTable}>{item.account}</Text>\r\n      <Text style={[styles.cellTable, { color: \"green\" }]}>{item.debit}</Text>\r\n      <Text style={[styles.cellTable, { color: \"red\" }]}>{item.credit}</Text>\r\n      <Text\r\n        style={[\r\n          styles.cellTable,\r\n          { borderRightWidth: 0 },\r\n          item.debit - item.credit > 0 ? { color: \"green\" } : { color: \"red\" },\r\n        ]}\r\n      >\r\n        {item.debit - item.credit}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.customerDetails}>\r\n        <View style={styles.headerTable}>\r\n          <Text style={styles.headerTextTable}>Account</Text>\r\n          <Text style={styles.headerTextTable}>Debit</Text>\r\n          <Text style={styles.headerTextTable}>Credit</Text>\r\n          <Text style={styles.headerTextTable}>Total</Text>\r\n        </View>\r\n        <FlatList\r\n          data={ledgerEntries}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id.toString()}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LedgerScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, FlatList, ScrollView } from \"react-native\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport { fetchData } from \"../../utils/database\";\r\n\r\nconst CardexScreen = ({ route }) => {\r\n  const { goBack } = useNavigate();\r\n  const { item } = route.params;\r\n  const [cardexEntries, setCardexEntries] = useState(null);\r\n  const id = item.id;\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/cardex/${id}`\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setCardexEntries(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  if (!cardexEntries) {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.root,\r\n          { alignItems: \"center\", justifyContent: \"center\", flex: 1 },\r\n        ]}\r\n      >\r\n        <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (cardexEntries.length === 0) {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.root,\r\n          { alignItems: \"center\", justifyContent: \"center\", flex: 1 },\r\n        ]}\r\n      >\r\n        <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n          <Text>No entries registered</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.itemTable}>\r\n      <Text style={styles.cellTable}>{item.fecha}</Text>\r\n      <Text style={styles.cellTable}>{item.cantidad}</Text>\r\n      <Text style={styles.cellTable}>{item.tipo_movimiento}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Product: {item.name}</Text>\r\n        <Text style={styles.title}>Stock: {item.stock}</Text>\r\n        <View style={[styles.containerTable, styles.topMargin]}>\r\n          <View style={styles.headerTable}>\r\n            <Text style={styles.headerTextTable}>Fecha</Text>\r\n            <Text style={styles.headerTextTable}>Cantidad</Text>\r\n            <Text style={styles.headerTextTable}>Tipo</Text>\r\n          </View>\r\n          <FlatList\r\n            data={cardexEntries}\r\n            renderItem={renderItem}\r\n            keyExtractor={(item) => item.id_registro.toString()}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default CardexScreen;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { View, Text, Button, ScrollView } from \"react-native\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst UserScreen = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { control, handleSubmit, setValue } = useForm();\r\n  useEffect(() => {\r\n    setValue(\"name\", user.payload.name);\r\n    setValue(\"ruc\", user.payload[\"cognito:username\"]);\r\n    setValue(\"email\", user.payload.email);\r\n  }, [setValue]);\r\n\r\n  const updateUserData = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>User Data</Text>\r\n        <View style={styles.customerDetails}>\r\n          <CustomInputText\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            placeholder=\"Insert a new name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Name is required\",\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            name=\"ruc\"\r\n            label=\"RUC\"\r\n            control={control}\r\n            rules={{\r\n              required: \"RUC is required\",\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            disabled\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"Insert a new email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Email is required\",\r\n            }}\r\n          />\r\n          {/* <CustomInputText\r\n            name=\"newPassword\"\r\n            label=\"New Password\"\r\n            placeholder=\"Insert a new password\"\r\n            control={control}\r\n          /> */}\r\n        </View>\r\n        {/* <CustomButton text={\"Save\"} onPress={handleSubmit(updateUserData)} /> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default UserScreen;\r\n","import React from \"react\";\r\nimport { View, Text, ScrollView, Image } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nexport default function ProductScreen({ route }) {\r\n  const { item } = route.params;\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <View style={styles.itemContainer}>\r\n          <View style={styles.imgContainer}>\r\n            <Image\r\n              style={styles.img}\r\n              source={require(\"../../assets/product_default.jpg\")}\r\n            />\r\n          </View>\r\n          <Text style={styles.itemTitle}>{item.name}</Text>\r\n          <Text style={styles.itemDescription}>{item.category}</Text>\r\n          <Text style={styles.itemPrice}>${item.price}</Text>\r\n          <Text style={styles.itemDetails}>{item.details}</Text>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useError } from \"../../context/ErrorContext\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { loadData } from \"../../utils/billing\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport useNavigate from \"../../utils/navigation\";\r\n\r\nconst NewAccountForm = ({ route }) => {\r\n  const { errorMessage, setErrorMessage, clearError } = useError();\r\n  const { control, handleSubmit, setValue } = useForm();\r\n  const { goTo, goBack } = useNavigate();\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filteredAccounts, setFilteredAccounts] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/accounts\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setAccounts(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const query = searchQuery.toLowerCase();\r\n    const filtered = accounts.filter(\r\n      (account) =>\r\n        account.nombre_cuenta.toLowerCase().includes(query) ||\r\n        account.codigo_cuenta.includes(query)\r\n    );\r\n    setFilteredAccounts(filtered);\r\n  };\r\n\r\n  const handleAccount = (account) => {\r\n    const accountToAdd = accounts.find(\r\n      (acc) => acc.id_cuenta === account.id_cuenta\r\n    );\r\n    if (accountToAdd) {\r\n      setSelectedAccount((prev) => [...prev, accountToAdd]);\r\n      console.log(selectedAccount);\r\n      splitCodeAndSum(account.codigo_cuenta);\r\n    }\r\n  };\r\n\r\n  const splitCodeAndSum = (code) => {\r\n    const splitCode = code.split(\".\");\r\n    const parentCode = splitCode.join(\".\"); // Código padre\r\n\r\n    // Buscar las cuentas hijas existentes bajo el código padre\r\n    const existingChildCodes = accounts\r\n      .filter((account) => {\r\n        const accountCodeParts = account.codigo_cuenta.split(\".\");\r\n        return (\r\n          accountCodeParts.length === splitCode.length + 1 &&\r\n          account.codigo_cuenta.startsWith(parentCode + \".\")\r\n        );\r\n      })\r\n      .map((account) => parseInt(account.codigo_cuenta.split(\".\").pop()));\r\n\r\n    // Determinar el número siguiente en la secuencia\r\n    let nextNumber = 1;\r\n    if (existingChildCodes.length > 0) {\r\n      nextNumber = Math.max(...existingChildCodes) + 1;\r\n    }\r\n\r\n    // Crear el nuevo código para la cuenta hija\r\n    const childCode = parentCode + \".\" + (\"0\" + nextNumber).slice(-2);\r\n\r\n    setValue(\"code\", childCode);\r\n  };\r\n\r\n  const renderAccountList = ({ item }) => (\r\n    <View\r\n      style={[\r\n        styles.itemContainer,\r\n        {\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View style={styles.itemDetails}>\r\n        <Text style={styles.itemName}>Código: {item.codigo_cuenta}</Text>\r\n        <Text style={styles.itemDescription}>Nombre: {item.nombre_cuenta}</Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.removeButton}\r\n        onPress={() => handleAccount(item)}\r\n      >\r\n        <Ionicons name=\"ios-add-circle-outline\" size={24} color=\"green\" />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  const onSavePressed = async (data) => {\r\n    // Obtener el id_cuenta de la cuenta padre y el nivel_cuenta\r\n    const idCuentaPadre = selectedAccount[0].id_cuenta;\r\n    const nivelCuenta = selectedAccount[0].nivel_cuenta + 1;\r\n\r\n    // Agregar el id_cuenta de la cuenta padre y el nivel_cuenta a los datos\r\n    data.padre_cuenta = idCuentaPadre;\r\n    data.nivel_cuenta = nivelCuenta;\r\n\r\n    console.log(data);\r\n\r\n    try {\r\n      // Realizar la solicitud HTTP para enviar los datos a la API\r\n      const response = await fetch(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/accounts\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al enviar los datos\");\r\n      }\r\n\r\n      // Si la solicitud se realizó con éxito, puedes hacer algo con la respuesta aquí\r\n      const responseData = await response.json();\r\n      console.log(\"Respuesta de la API:\", responseData);\r\n      // Después de enviar los datos con éxito, actualizar la lista y regresar a la página anterior\r\n      route.params.updateList();\r\n      goBack();\r\n    } catch (error) {\r\n      console.error(\"Error al enviar los datos:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n    >\r\n      <View style={styles.container}>\r\n        {selectedAccount.length === 0 ? (\r\n          <View style={styles.customerDetails}>\r\n            {errorMessage !== \"Cantidad invalida\" ? (\r\n              <Text style={styles.error}>{errorMessage}</Text>\r\n            ) : null}\r\n            <CustomInputText\r\n              name=\"search\"\r\n              placeholder=\"Insert a name or code or empty for list all\"\r\n              label=\"Search\"\r\n              control={control}\r\n              handleInputChange={(text) => setSearchQuery(text)}\r\n            />\r\n            <CustomButton text={\"Search\"} onPress={handleSearch} />\r\n          </View>\r\n        ) : null}\r\n        <View style={styles.containerCol}>\r\n          {selectedAccount.length !== 0 ? (\r\n            <View style={[styles.customerDetails, { height: 400 }]}>\r\n              <View style={[styles.itemContainer, { marginRight: 1 }]}>\r\n                <View style={styles.itemDetails}>\r\n                  <Text style={[styles.title, { alignSelf: \"center\" }]}>\r\n                    Father\r\n                  </Text>\r\n                  <View\r\n                    style={[styles.containerRow, { alignSelf: \"baseline\" }]}\r\n                  >\r\n                    <Text style={styles.itemName}>Name: </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {selectedAccount[0].nombre_cuenta}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={[styles.containerRow, { alignSelf: \"baseline\" }]}\r\n                  >\r\n                    <Text style={styles.itemName}>Code: </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {selectedAccount[0].codigo_cuenta}\r\n                    </Text>\r\n                  </View>\r\n\r\n                  <View style={styles.customerDetails}>\r\n                    <Text style={[styles.title, { alignSelf: \"center\" }]}>\r\n                      Child\r\n                    </Text>\r\n                    <CustomInputText\r\n                      placeholder=\"Insert a code\"\r\n                      name=\"code\"\r\n                      label=\"Code\"\r\n                      disabled\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"Code is required\",\r\n                      }}\r\n                    />\r\n                    <CustomInputText\r\n                      placeholder=\"Insert a name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      control={control}\r\n                      rules={{\r\n                        required: \"Name is required\",\r\n                      }}\r\n                      handleInputChange={() => clearError()}\r\n                    />\r\n                    <CustomButton\r\n                      text={\"Save\"}\r\n                      onPress={handleSubmit(onSavePressed)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : filteredAccounts.length !== 0 ? (\r\n            <View style={[styles.customerDetails, { height: 300 }]}>\r\n              <FlatList\r\n                data={filteredAccounts.sort((a, b) =>\r\n                  a.codigo_cuenta.localeCompare(b.codigo_cuenta)\r\n                )}\r\n                renderItem={renderAccountList}\r\n                keyExtractor={(item) => item.id_cuenta.toString()}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <View style={styles.customerDetails}>\r\n              <Text>Search an account</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewAccountForm;\r\n","import {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useError } from \"../../context/ErrorContext\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { loadData } from \"../../utils/billing\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport CustomInputNumber from \"../../components/Inputs/CustomInputNumber\";\r\nimport SearchCart from \"../../components/Card/CustomSearchCart\";\r\nimport { updateData } from \"../../utils/database\";\r\nimport useNavigate from \"../../utils/navigation\";\r\n\r\nconst StockScreen = ({ route }) => {\r\n  const { type } = route.params;\r\n  const { errorMessage, setErrorMessage, clearError } = useError();\r\n  const { control, handleSubmit, watch, setValue } = useForm();\r\n  const { goBack } = useNavigate();\r\n  const [products, setProducts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [selectedProducts, setSelectedProducts] = useState([]);\r\n  const device = Platform.OS;\r\n\r\n  useEffect(() => {\r\n    loadData(setProducts);\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    const query = searchQuery.toLowerCase();\r\n    const filtered = products.filter((product) =>\r\n      product.name.toLowerCase().includes(query)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleStock = (product) => {\r\n    const productId = product.id;\r\n    const productToAdd = products.find((product) => product.id === productId);\r\n    if (productToAdd) {\r\n      const existingProduct = selectedProducts.find(\r\n        (product) => product.id === productId\r\n      );\r\n      if (existingProduct) {\r\n        const updatedProducts = selectedProducts.map((product) =>\r\n          product.id === productId\r\n            ? { ...product, quantity: product.quantity + 1 }\r\n            : product\r\n        );\r\n        setSelectedProducts(updatedProducts);\r\n      } else {\r\n        const newProduct = { ...productToAdd, quantity: 1 };\r\n        setSelectedProducts((prev) => [...prev, newProduct]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    const id = selectedProducts[0].id;\r\n    const quantity = Number(data.quantity);\r\n    const newStock =\r\n      type === \"add\"\r\n        ? Number(data.quantity) + Number(selectedProducts[0].stock)\r\n        : Number(selectedProducts[0].stock) >= Number(data.quantity)\r\n        ? Number(selectedProducts[0].stock) - Number(data.quantity)\r\n        : setErrorMessage(\"Cantidad invalida\");\r\n    try {\r\n      const updatedProduct = await updateData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/inventory/stock\",\r\n        id,\r\n        { type, quantity, newStock }\r\n      );\r\n      console.log(\"Producto actualizado:\", updatedProduct);\r\n      route.params.updateProducts();\r\n      goBack();\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar el producto:\", error.message);\r\n      setErrorMessage(\r\n        \"Error al actualizar el producto. Por favor, inténtalo de nuevo.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      nestedScrollEnabled={true}\r\n      style={styles.root}\r\n    >\r\n      <View style={styles.container}>\r\n        <Text style={[styles.title, { alignSelf: \"center\" }]}>\r\n          {type === \"add\" ? \"Add to inventory\" : \"Get from inventory\"}\r\n        </Text>\r\n        {selectedProducts.length === 0 ? (\r\n          <View style={styles.customerDetails}>\r\n            {errorMessage !== \"Cantidad invalida\" ? (\r\n              <Text style={styles.error}>{errorMessage}</Text>\r\n            ) : null}\r\n            <CustomInputText\r\n              name=\"search\"\r\n              placeholder=\"Insert a name or code or just leave empty for list all\"\r\n              label=\"Search\"\r\n              control={control}\r\n              handleInputChange={(text) => setSearchQuery(text)}\r\n            />\r\n            <CustomButton text={\"Search\"} onPress={handleSearch} />\r\n          </View>\r\n        ) : null}\r\n        <View style={styles.containerCol}>\r\n          {selectedProducts.length !== 0 ? (\r\n            <View style={[styles.customerDetails, { height: 300 }]}>\r\n              <View style={[styles.itemContainer, { marginRight: 1 }]}>\r\n                <View style={styles.itemDetails}>\r\n                  <View\r\n                    style={[styles.containerRow, { alignSelf: \"baseline\" }]}\r\n                  >\r\n                    <Text style={styles.itemName}>Name: </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {selectedProducts[0].name}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={[styles.containerRow, { alignSelf: \"baseline\" }]}\r\n                  >\r\n                    <Text style={styles.itemName}>Code: </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {selectedProducts[0].code}\r\n                    </Text>\r\n                  </View>\r\n                  <View\r\n                    style={[styles.containerRow, { alignSelf: \"baseline\" }]}\r\n                  >\r\n                    <Text style={styles.itemName}>Stock: </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {selectedProducts[0].stock}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.customerDetails}>\r\n                    <CustomInputNumber\r\n                      placeholder=\"Insert a quantity\"\r\n                      name=\"quantity\"\r\n                      label={\r\n                        type === \"add\"\r\n                          ? \"Quantity to add\"\r\n                          : \"Quantity to retrieve\"\r\n                      }\r\n                      control={control}\r\n                      type={\"number\"}\r\n                      showDecimals={false}\r\n                      rules={{\r\n                        required: \"Stock is required\",\r\n                        pattern: {\r\n                          value: /^[0-9]*$/,\r\n                          message: \"Only numbers allowed\",\r\n                        },\r\n                      }}\r\n                      handleInputChange={() => clearError()}\r\n                    />\r\n                    {errorMessage === \"Cantidad invalida\" ? (\r\n                      <Text style={styles.error}>{errorMessage}</Text>\r\n                    ) : null}\r\n                    <CustomButton\r\n                      text={\"Save\"}\r\n                      onPress={handleSubmit(onSubmitPressed)}\r\n                    />\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : filteredProducts.length !== 0 ? (\r\n            <View style={[styles.customerDetails, { height: 300 }]}>\r\n              <FlatList\r\n                data={filteredProducts}\r\n                renderItem={({ item }) => (\r\n                  <SearchCart\r\n                    item={item}\r\n                    device={device}\r\n                    products={products}\r\n                    selectedProducts={selectedProducts}\r\n                    setSelectedProducts={setSelectedProducts}\r\n                  />\r\n                )}\r\n                keyExtractor={(item) => item.id.toString()}\r\n              />\r\n            </View>\r\n          ) : (\r\n            <View style={styles.customerDetails}>\r\n              <Text>Search a product</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default StockScreen;\r\n","import {\r\n  Text,\r\n  FlatList,\r\n  Image,\r\n  View,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport CustomSearchInput from \"../Inputs/CustomSearchInput\";\r\nimport styles from \"../../styles/styles\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nconst device = Platform.OS;\r\n\r\nconst CustomCardInvoices = ({ data }) => {\r\n  const { goTo } = useNavigate();\r\n  const { control } = useForm();\r\n  const [filter, setFilter] = useState([]);\r\n  const [master, setMaster] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setFilter(data);\r\n    setMaster(data);\r\n  }, [data]);\r\n\r\n  const searchFilter = (text) => {\r\n    if (text) {\r\n      const newData = master.filter((item) => {\r\n        const itemData = item.date ? item.date.toUpperCase() : \"\".toUpperCase();\r\n        const itemCodeData = item.invoice\r\n          ? item.code.toUpperCase()\r\n          : \"\".toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return (\r\n          itemData.indexOf(textData) > -1 || itemCodeData.indexOf(textData) > -1\r\n        );\r\n      });\r\n      setFilter(newData);\r\n      setSearch(text);\r\n    } else {\r\n      setFilter(master);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const onMorePressed = (item) => {\r\n    goTo(\"InvoiceDetails\", { item: item });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={[\r\n          styles.void,\r\n          {\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            borderColor: \"#e8e8e8\",\r\n            borderWidth: 1,\r\n            borderRadius: 5,\r\n            paddingHorizontal: 10,\r\n            marginVertical: 5,\r\n          },\r\n        ]}\r\n      >\r\n        <CustomSearchInput\r\n          placeholder=\"Keyword Here\"\r\n          name={\"search\"}\r\n          label={\"Search\"}\r\n          control={control}\r\n          handleInputChange={(text) => searchFilter(text)}\r\n        />\r\n      </View>\r\n      <View style={styles.customerDetails}>\r\n        <View style={styles.headerTable}>\r\n          <Text style={styles.headerTextTable}>Date</Text>\r\n          <Text style={styles.headerTextTable}>Document</Text>\r\n          <Text style={styles.headerTextTable}>Client</Text>\r\n          <Text style={styles.headerTextTable}>More</Text>\r\n        </View>\r\n        <FlatList\r\n          data={filter}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <View style={styles.itemTable}>\r\n                <View style={{ flexDirection: \"column\", width: \"100%\" }}>\r\n                  <View style={{ flexDirection: \"row\" }}>\r\n                    <Text style={styles.cellTable}>{item.date}</Text>\r\n                    <Text style={styles.cellTable}>{item.id}</Text>\r\n                    <Text style={styles.cellTable}>{item.client}</Text>\r\n                    <View style={styles.cellRowTable}>\r\n                      <TouchableOpacity\r\n                        style={styles.removeButton}\r\n                        onPress={() => onMorePressed(item)}\r\n                      >\r\n                        <MaterialCommunityIcons\r\n                          name=\"plus-circle-outline\"\r\n                          size={24}\r\n                          color=\"black\"\r\n                        />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            );\r\n          }}\r\n          /* keyExtractor={(item) => {\r\n          item.id.toString();\r\n        }} */\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCardInvoices;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomCardInvoices from \"../../components/Card/CustomCardInvoices\";\r\nimport { fetchData } from \"../../utils/database\";\r\n\r\nconst InvoiceScreen = () => {\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        \"https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/invoices\"\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      console.log(body)\r\n      setJournalEntries(body);\r\n      console.log(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <CustomCardInvoices data={journalEntries} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default InvoiceScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, ScrollView, Image, TextInput } from \"react-native\";\r\nimport styles from \"../../styles/styles\";\r\nimport { fetchData } from \"../../utils/database\";\r\nimport ResumeCart from \"../../components/Card/CustomResumeCart\";\r\n\r\nexport default function DetailsScreen({ route }) {\r\n  const { item } = route.params;\r\n  const [invoiceDetails, setInvoiceDetails] = useState(null);\r\n  const id = item.id;\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const data = await fetchData(\r\n        `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/invoices/${id}`\r\n      );\r\n      const body = JSON.parse(data.body);\r\n      setInvoiceDetails(body);\r\n      console.log(body);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  if (!invoiceDetails) {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.root,\r\n          { alignItems: \"center\", justifyContent: \"center\", flex: 1 },\r\n        ]}\r\n      >\r\n        <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          {\r\n            justifyContent: \"center\",\r\n          },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            styles.containerCol,\r\n            {\r\n              rowGap: 20,\r\n            },\r\n          ]}\r\n        >\r\n          <Text style={[styles.title, { alignSelf: \"center\" }]}>Resume</Text>\r\n          <View style={styles.customerDetails}>\r\n            <Text>CI/RUC: {invoiceDetails.cliente.identificacion}</Text>\r\n            <Text>\r\n              Name:{\" \"}\r\n              {invoiceDetails.cliente.nombre +\r\n                \" \" +\r\n                invoiceDetails.cliente.apellido}{\" \"}\r\n            </Text>\r\n            <Text>Email: {invoiceDetails.cliente.mail}</Text>\r\n            <Text>Phone: {invoiceDetails.cliente.telefono}</Text>\r\n            <Text>Address: {invoiceDetails.cliente.direccion}</Text>\r\n          </View>\r\n          <View style={styles.customerDetails}>\r\n            {invoiceDetails.detalles.map((product, index) => (\r\n              <View key={index} style={styles.void}>\r\n                <View\r\n                  style={[\r\n                    styles.containerRow,\r\n                    { borderBottomWidth: 1, borderColor: \"#ccc\" },\r\n                  ]}\r\n                >\r\n                  <View style={styles.itemDetails}>\r\n                    <Text style={styles.itemName}>\r\n                      {product.nombre_producto}\r\n                    </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      {product.codigo_principal}\r\n                    </Text>\r\n                    <Text style={styles.itemDescription}>\r\n                      ${product.precio_unitario}\r\n                    </Text>\r\n                  </View>\r\n                  <TextInput\r\n                    editable={false}\r\n                    style={styles.quantityInput}\r\n                    value={product.cantidad.toString()}\r\n                  />\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n          <View style={styles.billSummary}>\r\n            {/* {paymentMethod === \"Cash\" ? (\r\n              <>\r\n                <Text>Method: {paymentMethod}</Text>\r\n                <Text>Change: ${change}</Text>\r\n              </>\r\n            ) : (\r\n              <Text>Method: {paymentMethod}</Text>\r\n            )} */}\r\n            <Text>Subtotal: ${(invoiceDetails.subtotal_sin_impuestos).toFixed(2)}</Text>\r\n            <Text>Tarifa 0: ${(invoiceDetails.sub_total_0).toFixed(2)}</Text>\r\n            <Text>Tarifa 12: ${(invoiceDetails.subtotal_12).toFixed(2)}</Text>\r\n            <Text>12% IVA: ${(invoiceDetails.iva).toFixed(2)}</Text>\r\n            <Text>Total: ${(invoiceDetails.total_factura).toFixed(2)}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../Buttons/CustomButton\";\r\nimport CustomInputText from \"../Inputs/CustomInputText\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport styles from \"../../styles/styles\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst EditAccountForm = ({ route }) => {\r\n  const { control, handleSubmit, setValue } = useForm();\r\n  const { goBack } = useNavigate();\r\n  const { item } = route.params;\r\n  const id = item.id_cuenta;\r\n\r\n  useEffect(() => {\r\n    setValue(\"nuevoNombre\", item.nombre_cuenta);\r\n  }, []);\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    console.log(data);\r\n    try {\r\n      const response = await fetch(\r\n        `https://zxdz2hq7jg.execute-api.us-east-1.amazonaws.com/dev/accounts/${id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al enviar los datos\");\r\n      }\r\n      // Si la solicitud fue exitosa, puedes hacer algo con la respuesta aquí\r\n      const responseBody = await response.json(); // Obtén el cuerpo de la respuesta\r\n      console.log(responseBody);\r\n      // Ejecuta la función para actualizar la lista\r\n      route.params.updateList();\r\n      // Regresar a la página anterior\r\n      goBack();\r\n    } catch (error) {\r\n      console.error(\"Error al enviar los datos:\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <View style={styles.customerDetails}>\r\n          <CustomInputText\r\n            placeholder=\"Insert the name\"\r\n            name=\"nuevoNombre\"\r\n            label=\"Name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Address is required\",\r\n            }}\r\n          />\r\n        </View>\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default EditAccountForm;\r\n","import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport NotFoundScreen from \"../screens/PublicScreens/NotFoundScreen\";\r\nimport KardexScreen from \"../screens/AppScreens/KardexScreen\";\r\nimport SideNavigation from \"./SideNavigation\";\r\nimport NewClientForm from \"../components/Forms/NewClientForm\";\r\nimport NewSupplierForm from \"../components/Forms/NewSupplierForm\";\r\nimport NewProductForm from \"../components/Forms/NewProductForm\";\r\nimport Company from \"../components/Forms/CompanyDataForm\";\r\nimport ProfileScreen from \"../screens/AppScreens/ProfileScreen\";\r\nimport NewCategoryForm from \"../components/Forms/NewCategoryForm\";\r\nimport AccountsScreen from \"../screens/AppScreens/AccountsScreen\";\r\nimport JournalScreen from \"../screens/AppScreens/JournalScreen\";\r\nimport LedgerScreen from \"../screens/AppScreens/LedgerScreen\";\r\nimport CardexScreen from \"../screens/AppScreens/CardexScreen\";\r\nimport UserScreen from \"../screens/AppScreens/UserScreen\";\r\nimport ProductScreen from \"../screens/AppScreens/ProductScreen\";\r\nimport NewAccountForm from \"../components/Forms/NewAccountForm\";\r\nimport StockScreen from \"../screens/AppScreens/StockScreen\";\r\nimport InvoiceScreen from \"../screens/AppScreens/InvoiceScreen\";\r\nimport DetailsScreen from \"../screens/AppScreens/DetailsScreen\";\r\nimport EditAccountForm from \"../components/Forms/EditAccountForm\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AppStack() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        /* screenOptions={{ headerShown: false }} */\r\n        initialRouteName=\"Home\"\r\n        screenOptions={{\r\n          headerStyle: { backgroundColor: \"#531158\" },\r\n          headerTintColor: \"#fff\",\r\n        }}\r\n      >\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={SideNavigation}\r\n          options={{ headerShown: false }}\r\n        />\r\n        {/* Not Found */}\r\n        <Stack.Screen\r\n          name=\"NotFound\"\r\n          component={NotFoundScreen}\r\n          options={{ headerTitle: \"Page not found\" }}\r\n        />\r\n        {/* Suppliers */}\r\n        <Stack.Screen\r\n          name=\"NewSupplier\"\r\n          component={NewSupplierForm}\r\n          options={{ headerTitle: \"New Supplier\" }}\r\n        />\r\n        {/* Inventory */}\r\n        <Stack.Screen\r\n          name=\"NewProduct\"\r\n          component={NewProductForm}\r\n          options={{ headerTitle: \"New Product\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"NewCategory\"\r\n          component={NewCategoryForm}\r\n          options={{ headerTitle: \"New Category\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"StockChange\"\r\n          component={StockScreen}\r\n          options={{ headerTitle: \"Stock Change\" }}\r\n        />\r\n        {/* Clients */}\r\n        <Stack.Screen\r\n          name=\"NewClient\"\r\n          component={NewClientForm}\r\n          options={{ headerTitle: \"New Costumer\" }}\r\n        />\r\n        {/* Profile */}\r\n        <Stack.Screen\r\n          name=\"UserProfile\"\r\n          component={ProfileScreen}\r\n          options={{ headerTitle: \"User Profile\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"ProductProfile\"\r\n          component={ProductScreen}\r\n          options={{ headerTitle: \"Product Profile\" }}\r\n        />\r\n        {/* Accounting */}\r\n        <Stack.Screen\r\n          name=\"InvoiceList\"\r\n          component={InvoiceScreen}\r\n          options={{ headerTitle: \"Invoice List\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"InvoiceDetails\"\r\n          component={DetailsScreen}\r\n          options={{ headerTitle: \"Invoice Details\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Kardex\"\r\n          component={KardexScreen}\r\n          options={{ headerTitle: \"Kardex Registry\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"HistoryProduct\"\r\n          component={CardexScreen}\r\n          options={{ headerTitle: \"Product History\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Accounts\"\r\n          component={AccountsScreen}\r\n          options={{ headerTitle: \"Accounting Accounts\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"NewAccount\"\r\n          component={NewAccountForm}\r\n          options={{ headerTitle: \"New Account\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"EditAccount\"\r\n          component={EditAccountForm}\r\n          options={{ headerTitle: \"Edit Account\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Journal\"\r\n          component={JournalScreen}\r\n          options={{ headerTitle: \"Journal\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Major\"\r\n          component={LedgerScreen}\r\n          options={{ headerTitle: \"Major\" }}\r\n        />\r\n        {/* Settings */}\r\n        <Stack.Screen\r\n          name=\"Company\"\r\n          component={Company}\r\n          options={{ headerTitle: \"Company Profile\" }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"User\"\r\n          component={UserScreen}\r\n          options={{ headerTitle: \"User Data\" }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default AppStack;\r\n","import { useState } from \"react\";\r\nimport {\r\n  signUp,\r\n  currentAuthenticatedUser,\r\n  updateUserAttribute,\r\n} from \"aws-amplify/auth\";\r\nimport useNavigate from \"../utils/navigation\";\r\n\r\nconst useRegistration = () => {\r\n  const [error, setError] = useState(null);\r\n  const { goTo } = useNavigate();\r\n\r\n  const onSignUp = async ({ username, name, email, password }) => {\r\n    const updated = Date.now();\r\n    const updated_at = updated.toString();\r\n    const picture = \"default\";\r\n    const config = \"false\";\r\n    try {\r\n      await signUp({\r\n        username,\r\n        password,\r\n        options: {\r\n          userAttributes: {\r\n            name,\r\n            picture,\r\n            updated_at,\r\n            email,\r\n            \"custom:config\": config,\r\n          },\r\n        },\r\n      });\r\n      goTo(\"ConfirmEmail\", { username });\r\n    } catch (error) {\r\n      setError(error.message || \"Error in the creation of the new user\");\r\n    }\r\n  };\r\n\r\n  const fetchUserDetails = async () => {\r\n    try {\r\n      const user = await currentAuthenticatedUser();\r\n      setEmail(user.attributes.email);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await Auth.updateUserAttributes(Auth.currentUser, {\r\n        \"custom:email\": email,\r\n      });\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null); // Método para limpiar el error\r\n  };\r\n\r\n  return { onSignUp, error, clearError };\r\n};\r\n\r\nexport default useRegistration;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport PasswordChecklist from \"react-password-checklist\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport useRegistration from \"../../utils/useRegistration\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../utils/constants\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\n\r\nconst SignUpScreen = () => {\r\n  const { onSignUp, error, clearError } = useRegistration();\r\n  const { goTo } = useNavigate();\r\n  const { control, handleSubmit, watch } = useForm();\r\n  const [password, setPassword] = useState(\"\");\r\n  const pwd = watch(\"password\");\r\n\r\n  const onRegisterPressed = (data) => {\r\n    clearError();\r\n    onSignUp(data);\r\n  };\r\n\r\n  const onSignInPress = () => {\r\n    goTo(\"SignIn\");\r\n  };\r\n\r\n  const onTermsOfUsePressed = () => {\r\n    goTo(\"TermsUse\");\r\n  };\r\n\r\n  const onPrivacyPressed = () => {\r\n    goTo(\"PrivacyPolicy\");\r\n  };\r\n\r\n  const handleInputChange = () => {\r\n    clearError();\r\n  };\r\n\r\n  const handlePasswordChange = (text) => {\r\n    clearError();\r\n    setPassword(text);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <Text\r\n          style={[\r\n            styles.title,\r\n            { color: \"#051C60\", textAlign: \"center\", marginBottom: 10 },\r\n          ]}\r\n        >\r\n          Create an account\r\n        </Text>\r\n        {error && <Text style={{ color: \"red\" }}>Error: {error}</Text>}\r\n        <CustomInputText\r\n          name=\"username\"\r\n          label=\"RUC\"\r\n          control={control}\r\n          placeholder=\"RUC\"\r\n          handleInputChange={handleInputChange}\r\n          rules={{\r\n            required: \"RUC is required\",\r\n            pattern: {\r\n              value: RUC_REGEX,\r\n              message: \"RUC should contain only numbers\",\r\n            },\r\n            minLength: {\r\n              value: 13,\r\n              message: \"RUC should be at least 13 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 13,\r\n              message: \"RUC should be max 13 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          control={control}\r\n          placeholder=\"Full name\"\r\n          handleInputChange={handleInputChange}\r\n          rules={{\r\n            required: \"Name is required\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Name should be at least 3 characters long\",\r\n            },\r\n            maxLength: {\r\n              value: 24,\r\n              message: \"Name should be max 24 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          control={control}\r\n          placeholder=\"Email\"\r\n          rules={{\r\n            required: \"Email is required\",\r\n            pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          control={control}\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          handleInputChange={handlePasswordChange}\r\n          rules={{\r\n            required: \"Password is required\",\r\n            minLength: {\r\n              value: 12,\r\n              message: \"Password should be at least 12 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomInputText\r\n          name=\"password-repeat\"\r\n          label=\"Password\"\r\n          control={control}\r\n          placeholder=\"Repeat Password\"\r\n          secureTextEntry\r\n          handleInputChange={handleInputChange}\r\n          rules={{\r\n            validate: (value) => value === pwd || \"Password do not match\",\r\n          }}\r\n        />\r\n        {/* <View style={{ alignItems: \"center\", margin: 10 }}>\r\n          <PasswordChecklist\r\n            rules={[\r\n              \"minLength\",\r\n              \"specialChar\",\r\n              \"number\",\r\n              \"capital\",\r\n              \"lowercase\",\r\n            ]}\r\n            minLength={12}\r\n            value={password}\r\n            onChange={(isValid) => {}}\r\n          />\r\n        </View> */}\r\n        <CustomButton\r\n          text=\"Register\"\r\n          onPress={handleSubmit(onRegisterPressed)}\r\n        />\r\n        <Text style={styles.text}>\r\n          By registering, you confirm that you accept our{\" \"}\r\n          <Text style={styles.link} onPress={onTermsOfUsePressed}>\r\n            Terms of Use\r\n          </Text>{\" \"}\r\n          and{\" \"}\r\n          <Text style={styles.link} onPress={onPrivacyPressed}>\r\n            Privacy Policy\r\n          </Text>\r\n        </Text>\r\n\r\n        <CustomButton\r\n          text=\"Have an account? Sign in\"\r\n          onPress={onSignInPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const confirmEmailStyles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    marginTop: 50\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#051C60',\r\n    margin: 10,\r\n  },\r\n  text: {\r\n    color: 'gray',\r\n    marginVertical: 10,\r\n  },\r\n  link: {\r\n    color: '#FDB075',\r\n  },\r\n});","import {\r\n  confirmSignUp,\r\n  resendSignUpCode,\r\n  resetPassword,\r\n  confirmResetPassword\r\n} from \"aws-amplify/auth\";\r\nimport { useState } from \"react\";\r\nimport useNavigate from \"./navigation\";\r\n\r\nconst useConfirmation = () => {\r\n  const [error, setError] = useState(null);\r\n  const { goTo } = useNavigate();\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const confirmEmailCode = async ({ username, confirmationCode }) => {\r\n    try {\r\n      await confirmSignUp({\r\n        username,\r\n        confirmationCode,\r\n      });\r\n      goTo(\"SignIn\");\r\n    } catch (error) {\r\n      setError(error.message || \"Error in the confirmation\");\r\n    }\r\n  };\r\n\r\n  const resendCodeMail = async ({ username }) => {\r\n    try {\r\n      await resendSignUpCode({ username });\r\n      return { success: true };\r\n    } catch (error) {\r\n      setError(error.message || \"Error on resend\");\r\n    }\r\n  };\r\n\r\n  function handleResetPasswordNextSteps(output, username) {\r\n    const { nextStep } = output;\r\n    switch (nextStep.resetPasswordStep) {\r\n      case \"CONFIRM_RESET_PASSWORD_WITH_CODE\":\r\n        const codeDeliveryDetails = nextStep.codeDeliveryDetails;\r\n        console.log(\r\n          `Confirmation code was sent to ${codeDeliveryDetails.deliveryMedium}`\r\n        );\r\n        goTo(\"NewPassword\", { username });\r\n        break;\r\n      case \"DONE\":\r\n        console.log(\"Successfully reset password.\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  const forgotPassword = async ({ username }) => {\r\n    try {\r\n      const output = await resetPassword({ username });\r\n      handleResetPasswordNextSteps(output, username);\r\n    } catch (error) {\r\n      setError(error.message || \"Error on reset\");\r\n    }\r\n  };\r\n\r\n  const newForgotPassword = async ({ username, confirmationCode, newPassword }) => {\r\n    try {\r\n      await confirmResetPassword({ username, confirmationCode, newPassword });\r\n      goTo(\"SignIn\");\r\n    } catch (error) {\r\n      setError(error.message || \"Error on set new password\");\r\n    }\r\n    \r\n  };\r\n\r\n  return {\r\n    confirmEmailCode,\r\n    resendCodeMail,\r\n    clearError,\r\n    error,\r\n    forgotPassword,\r\n    newForgotPassword\r\n  };\r\n};\r\n\r\nexport default useConfirmation;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomInput from \"../../components/Inputs/CustomInput\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { confirmEmailStyles } from \"../../styles/screenStyles/ConfirmEmailStyles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useConfirmation from \"../../utils/useConfirmation\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\n\r\nconst ConfirmEmailScreen = ({ route }) => {\r\n  const { control, handleSubmit } = useForm();\r\n  const { goTo } = useNavigate();\r\n  const { username } = route.params;\r\n  const { confirmEmailCode, resendCodeMail, clearError, error } =\r\n    useConfirmation();\r\n\r\n  const onConfirmPressed = ({ confirmationCode }) => {\r\n    clearError();\r\n    confirmEmailCode({ confirmationCode, username });\r\n  };\r\n\r\n  const onSignInPress = () => {\r\n    goTo(\"SignIn\");\r\n  };\r\n\r\n  const onResendPress = () => {\r\n    clearError();\r\n    resendCodeMail({ username });\r\n  };\r\n\r\n  const handleInputChange = () => {\r\n    clearError();\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <Text\r\n          style={[\r\n            styles.title,\r\n            { color: \"#051C60\", textAlign: \"center\", marginBottom: 10 },\r\n          ]}\r\n        >\r\n          Confirm your email\r\n        </Text>\r\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\r\n        <CustomInputText\r\n          name=\"confirmationCode\"\r\n          label={\"Code\"}\r\n          control={control}\r\n          handleInputChange={handleInputChange}\r\n          placeholder=\"Enter your confirmation code\"\r\n          rules={{\r\n            required: \"Confirmation code is required\",\r\n          }}\r\n        />\r\n        <CustomButton text=\"Confirm\" onPress={handleSubmit(onConfirmPressed)} />\r\n        <CustomButton\r\n          text=\"Resend code\"\r\n          onPress={onResendPress}\r\n          type=\"SECONDARY\"\r\n        />\r\n        <CustomButton\r\n          text=\"Back to Sign in\"\r\n          onPress={onSignInPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ConfirmEmailScreen;\r\n","import React from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport useConfirmation from \"../../utils/useConfirmation\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const { control, handleSubmit } = useForm();\r\n  const { goTo } = useNavigate();\r\n  const { error, clearError, forgotPassword } = useConfirmation();\r\n\r\n  const onSendPressed = async ({ username }) => {\r\n    clearError();\r\n    forgotPassword({ username });\r\n  };\r\n\r\n  const onSignInPress = () => {\r\n    goTo(\"SignIn\");\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <Text\r\n          style={[\r\n            styles.title,\r\n            { color: \"#051C60\", textAlign: \"center\", marginBottom: 10 },\r\n          ]}\r\n        >\r\n          Reset your password\r\n        </Text>\r\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\r\n        <CustomInputText\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          control={control}\r\n          placeholder=\"Insert the Ruc or Email\"\r\n          rules={{\r\n            required: \"RUC/Email is required\",\r\n          }}\r\n        />\r\n        <CustomButton text=\"Send\" onPress={handleSubmit(onSendPressed)} />\r\n        <CustomButton\r\n          text=\"Back to Sign in\"\r\n          onPress={onSignInPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","import React, { useState } from \"react\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomInput from \"../../components/Inputs/CustomInput\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport { newPasswordStyles } from \"../../styles/screenStyles/NewPasswordStyles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport useConfirmation from \"../../utils/useConfirmation\";\r\nimport PasswordChecklist from \"react-password-checklist\";\r\nimport styles from \"../../styles/styles\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\n\r\nconst NewPasswordScreen = ({ route }) => {\r\n  const { control, handleSubmit } = useForm();\r\n  const { username } = route.params;\r\n  const { goTo } = useNavigate();\r\n  const { error, clearError, newForgotPassword } = useConfirmation();\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onSubmitPressed = ({ confirmationCode, newPassword }) => {\r\n    clearError();\r\n    newForgotPassword({ username, confirmationCode, newPassword });\r\n  };\r\n\r\n  const onSignInPress = () => {\r\n    goTo(\"SignIn\");\r\n  };\r\n\r\n  const handlePasswordChange = (text) => {\r\n    clearError();\r\n    setPassword(text);\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <View style={[styles.container, { justifyContent: \"center\" }]}>\r\n        <Text\r\n          style={[\r\n            styles.title,\r\n            { color: \"#051C60\", textAlign: \"center\", marginBottom: 10 },\r\n          ]}\r\n        >\r\n          Reset your password\r\n        </Text>\r\n        {error ? <Text style={{ color: \"red\" }}>{error}</Text> : null}\r\n        <CustomInputText\r\n          placeholder=\"Code\"\r\n          name=\"confirmationCode\"\r\n          label={\"Code\"}\r\n          control={control}\r\n          rules={{ required: \"Code is required\" }}\r\n        />\r\n        <CustomInputText\r\n          name=\"newPassword\"\r\n          label={\"New Password\"}\r\n          control={control}\r\n          placeholder=\"Enter your new password\"\r\n          secureTextEntry\r\n          handleInputChange={handlePasswordChange}\r\n          rules={{\r\n            required: \"Password is required\",\r\n            minLength: {\r\n              value: 12,\r\n              message: \"Password should be at least 12 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        {/* <View style={{ alignItems: \"center\", margin: 10 }}>\r\n          <PasswordChecklist\r\n            rules={[\r\n              \"minLength\",\r\n              \"specialChar\",\r\n              \"number\",\r\n              \"capital\",\r\n              \"lowercase\",\r\n            ]}\r\n            minLength={12}\r\n            value={password}\r\n            onChange={(isValid) => {}}\r\n          />\r\n        </View> */}\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n        <CustomButton\r\n          text=\"Back to Sign in\"\r\n          onPress={onSignInPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NewPasswordScreen;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Image,\r\n  useWindowDimensions,\r\n  ScrollView,\r\n  Text,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport Logo from \"../../assets/Logo_ultimate.png\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport useNavigate from \"../../utils/navigation\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nconst SignInScreen = () => {\r\n  const { height } = useWindowDimensions();\r\n  const { logIn, error, clearError } = useContext(AuthContext);\r\n  const { control, handleSubmit } = useForm();\r\n  const { goTo } = useNavigate();\r\n\r\n  const onSignInPressed = async ({ username, password }) => {\r\n    clearError();\r\n    await logIn(username, password);\r\n  };\r\n\r\n  const onForgotPasswordPressed = () => {\r\n    goTo(\"ForgotPassword\");\r\n  };\r\n\r\n  const onSignUpPress = () => {\r\n    goTo(\"Register\");\r\n  };\r\n\r\n  const handleInputChange = () => {\r\n    clearError();\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      showsVerticalScrollIndicator={false}\r\n      style={styles.root}\r\n      contentContainerStyle={{\r\n        justifyContent: \"center\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      \r\n      <View style={[styles.container, { justifyContent: 'center', }]}>\r\n        <View style={[styles.void, { alignItems: \"center\" }]}>\r\n          <Image\r\n            source={Logo}\r\n            style={[styles.logo, { height: height * 0.3 }]}\r\n            resizeMode=\"contain\"\r\n          />\r\n        </View>\r\n        {error && <Text style={{ color: \"red\" }}>Error: {error}</Text>}\r\n        <CustomInputText\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          placeholder=\"RUC or Email\"\r\n          control={control}\r\n          rules={{ required: \"RUC/Email is required\" }}\r\n          handleInputChange={handleInputChange}\r\n        />\r\n        <CustomInputText\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          handleInputChange={handleInputChange}\r\n          control={control}\r\n          rules={{\r\n            required: \"Password is required\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Password should be minimum 3 characters long\",\r\n            },\r\n          }}\r\n        />\r\n        <CustomButton\r\n          text={\"Sign In\"}\r\n          onPress={handleSubmit(onSignInPressed)}\r\n        />\r\n        <CustomButton\r\n          text=\"Forgot password?\"\r\n          onPress={onForgotPasswordPressed}\r\n          type=\"TERTIARY\"\r\n        />\r\n        <CustomButton\r\n          text=\"Don't have an account? Create one\"\r\n          onPress={onSignUpPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default SignInScreen;\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  blueText: {\r\n    color: \"blue\",\r\n  },\r\n  redText: {\r\n    color: \"red\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import { View, Text, ScrollView } from \"react-native\";\r\nimport React from \"react\";\r\nimport { globalStyles } from \"../../styles/GlobalStyles\";\r\n\r\nexport default function PrivacyPolicyScreen({ navigation }) {\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={globalStyles.container}>\r\n        <Text>Privacy Policy</Text>\r\n        <Text>\r\n          Privacy Policy of Company Name Company Name operates the Website Name\r\n          website, which provides the SERVICE. This page is used to inform\r\n          website visitors regarding our policies with the collection, use, and\r\n          disclosure of Personal Information if anyone decided to use our\r\n          Service, the Website Name website. If you choose to use our Service,\r\n          then you agree to the collection and use of information in relation\r\n          with this policy. The Personal Information that we collect are used\r\n          for providing and improving the Service. We will not use or share your\r\n          information with anyone except as described in this Privacy Policy.\r\n          The terms used in this Privacy Policy have the same meanings as in our\r\n          Terms and Conditions, which is accessible at Website URL, unless\r\n          otherwise defined in this Privacy Policy. Information Collection and\r\n          Use For a better experience while using our Service, we may require\r\n          you to provide us with certain personally identifiable information,\r\n          including but not limited to your name, phone number, and postal\r\n          address. The information that we collect will be used to contact or\r\n          identify you. Log Data We want to inform you that whenever you visit\r\n          our Service, we collect information that your browser sends to us that\r\n          is called Log Data. This Log Data may include information such as your\r\n          computer's Internet Protocol (“IP”) address, browser version, pages of\r\n          our Service that you visit, the time and date of your visit, the time\r\n          spent on those pages, and other statistics. Cookies Cookies are files\r\n          with small amount of data that is commonly used an anonymous unique\r\n          identifier. These are sent to your browser from the website that you\r\n          visit and are stored on your computer's hard drive. Our website uses\r\n          these “cookies” to collection information and to improve our Service.\r\n          You have the option to either accept or refuse these cookies, and know\r\n          when a cookie is being sent to your computer. If you choose to refuse\r\n          our cookies, you may not be able to use some portions of our Service.\r\n          Service Providers We may employ third-party companies and individuals\r\n          due to the following reasons: To facilitate our Service; To provide\r\n          the Service on our behalf; To perform Service-related services; or To\r\n          assist us in analyzing how our Service is used. We want to inform our\r\n          Service users that these third parties have access to your Personal\r\n          Information. The reason is to perform the tasks assigned to them on\r\n          our behalf. However, they are obligated not to disclose or use the\r\n          information for any other purpose. Security We value your trust in\r\n          providing us your Personal Information, thus we are striving to use\r\n          commercially acceptable means of protecting it. But remember that no\r\n          method of transmission over the internet, or method of electronic\r\n          storage is 100% secure and reliable, and we cannot guarantee its\r\n          absolute security. Links to Other Sites Our Service may contain links\r\n          to other sites. If you click on a third-party link, you will be\r\n          directed to that site. Note that these external sites are not operated\r\n          by us. Therefore, we strongly advise you to review the Privacy Policy\r\n          of these websites. We have no control over, and assume no\r\n          responsibility for the content, privacy policies, or practices of any\r\n          third-party sites or services. Children's Privacy Our Services do not\r\n          address anyone under the age of 13. We do not knowingly collect\r\n          personal identifiable information from children under 13. In the case\r\n          we discover that a child under 13 has provided us with personal\r\n          information, we immediately delete this from our servers. If you are a\r\n          parent or guardian and you are aware that your child has provided us\r\n          with personal information, please contact us so that we will be able\r\n          to do necessary actions. Changes to This Privacy Policy We may update\r\n          our Privacy Policy from time to time. Thus, we advise you to review\r\n          this page periodically for any changes. We will notify you of any\r\n          changes by posting the new Privacy Policy on this page. These changes\r\n          are effective immediately, after they are posted on this page. Contact\r\n          Us If you have any questions or suggestions about our Privacy Policy,\r\n          do not hesitate to contact us.\r\n        </Text>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import { View, Text, ScrollView } from \"react-native\";\r\nimport React from \"react\";\r\nimport { globalStyles } from \"../../styles/GlobalStyles\";\r\n\r\nexport default function TermsUseScreen() {\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={globalStyles.container}>\r\n        <Text>Terms of Use</Text>\r\n        <Text>\r\n          1. Introduction This website is operated by [Merchant Name]. The terms\r\n          “we”, “us”, and “our” refer to [Merchant Name]. The use of our website\r\n          is subject to the following terms and conditions of use, as amended\r\n          from time to time (the “Terms”). The Terms are to be read together by\r\n          you with any terms, conditions or disclaimers provided in the pages of\r\n          our website. Please review the Terms carefully. The Terms apply to all\r\n          users of our website, including without limitation, users who are\r\n          browsers, customers, merchants, vendors and/or contributors of\r\n          content. If you access and use this website, you accept and agree to\r\n          be bound by and comply with the Terms and our Privacy Policy. If you\r\n          do not agree to the Terms or our Privacy Policy, you are not\r\n          authorized to access our website, use any of our website’s services or\r\n          place an order on our website. 2. Use of our Website You agree to use\r\n          our website for legitimate purposes and not for any illegal or\r\n          unauthorized purpose, including without limitation, in violation of\r\n          any intellectual property or privacy law. By agreeing to the Terms,\r\n          you represent and warrant that you are at least the age of majority in\r\n          your state or province of residence and are legally capable of\r\n          entering into a binding contract. You agree to not use our website to\r\n          conduct any activity that would constitute a civil or criminal offence\r\n          or violate any law. You agree not to attempt to interfere with our\r\n          website’s network or security features or to gain unauthorized access\r\n          to our systems. You agree to provide us with accurate personal\r\n          information, such as your email address, mailing address and other\r\n          contact details in order to complete your order or contact you as\r\n          needed. You agree to promptly update your account and information. You\r\n          authorize us to collect and use this information to contact you in\r\n          accordance with our Privacy Policy. 3. General Conditions We reserve\r\n          the right to refuse service to anyone, at any time, for any reason. We\r\n          reserve the right to make any modifications to the website, including\r\n          terminating, changing, suspending or discontinuing any aspect of the\r\n          website at any time, without notice. We may impose additional rules or\r\n          limits on the use of our website. You agree to review the Terms\r\n          regularly and your continued access or use of our website will mean\r\n          that you agree to any changes. You agree that we will not be liable to\r\n          you or any third party for any modification, suspension or\r\n          discontinuance of our website or for any service, content, feature or\r\n          product offered through our website. 4. Products or Services All\r\n          purchases through our website are subject to product availability. We\r\n          may, in our sole discretion, limit or cancel the quantities offered on\r\n          our website or limit the sales of our products or services to any\r\n          person, household, geographic region or jurisdiction. Prices for our\r\n          products are subject to change, without notice. Unless otherwise\r\n          indicated, prices displayed on our website are quoted in Canadian\r\n          dollars. We reserve the right, in our sole discretion, to refuse\r\n          orders, including without limitation, orders that appear to be placed\r\n          by distributors or resellers. If we believe that you have made a false\r\n          or fraudulent order, we will be entitled to cancel the order and\r\n          inform the relevant authorities. We do not guarantee the accuracy of\r\n          the colour or design of the products on our website. We have made\r\n          efforts to ensure the colour and design of our products are displayed\r\n          as accurately as possible on our website. 5. Links to Third-Party\r\n          Websites Links from or to websites outside our website are meant for\r\n          convenience only. We do not review, endorse, approve or control, and\r\n          are not responsible for any sites linked from or to our website, the\r\n          content of those sites, the third parties named therein, or their\r\n          products and services. Linking to any other site is at your sole risk\r\n          and we will not be responsible or liable for any damages in connection\r\n          with linking. Links to downloadable software sites are for convenience\r\n          only and we are not responsible or liable for any difficulties or\r\n          consequences associated with downloading the software. Use of any\r\n          downloaded software is governed by the terms of the license agreement,\r\n          if any, which accompanies or is provided with the software. 6. Use\r\n          Comments, Feedback, and Other Submissions You acknowledge that you are\r\n          responsible for the information, profiles, opinions, messages,\r\n          comments and any other content (collectively, the “Content”) that you\r\n          post, distribute or share on or through our website or services\r\n          available in connection with our website. You further acknowledge that\r\n          you have full responsibility for the Content, including but limited\r\n          to, with respect to its legality, and its trademark, copyright and\r\n          other intellectual property ownership. You agree that any Content\r\n          submitted by you in response to a request by us for a specific\r\n          submission may be edited, adapted, modified, recreated, published, or\r\n          distributed by us. You further agree that we are under no obligation\r\n          to maintain any Content in confidence, to pay compensation for any\r\n          Content or to respond to any Content. You agree that you will not\r\n          post, distribute or share any Content on our website that is protected\r\n          by copyright, trademark, patent or any other proprietary right without\r\n          the express consent of the owner of such proprietary right. You\r\n          further agree that your Content will not be unlawful, abusive or\r\n          obscene nor will it contain any malware or computer virus that could\r\n          affect our website’s operations. You will be solely liable for any\r\n          Content that you make and its accuracy. We have no responsibility and\r\n          assume no liability for any Content posted by you or any third-party.\r\n          We reserve the right to terminate your ability to post on our website\r\n          and to remove and/or delete any Content that we deem objectionable.\r\n          You consent to such removal and/or deletion and waive any claim\r\n          against us for the removal and/or deletion of your Content. 7. Your\r\n          Personal Information Please see our Privacy Policy to learn about how\r\n          we collect, use, and share your personal information. 8. Errors and\r\n          Omissions Please note that our website may contain typographical\r\n          errors or inaccuracies and may not be complete or current. We reserve\r\n          the right to correct any errors, inaccuracies or omissions and to\r\n          change or update information at any time, without prior notice\r\n          (including after an order has been submitted). Such errors,\r\n          inaccuracies or omissions may relate to product description, pricing,\r\n          promotion and availability and we reserve the right to cancel or\r\n          refuse any order placed based on incorrect pricing or availability\r\n          information, to the extent permitted by applicable law. We do not\r\n          undertake to update, modify or clarify information on our website,\r\n          except as required by law. 9. Disclaimer and Limitation of Liability\r\n          You assume all responsibility and risk with respect to your use of our\r\n          website, which is provided “as is” without warranties, representations\r\n          or conditions of any kind, either express or implied, with regard to\r\n          information accessed from or via our website, including without\r\n          limitation, all content and materials, and functions and services\r\n          provided on our website, all of which are provided without warranty of\r\n          any kind, including but not limited to warranties concerning the\r\n          availability, accuracy, completeness or usefulness of content or\r\n          information, uninterrupted access, and any warranties of title,\r\n          non-infringement, merchantability or fitness for a particular purpose.\r\n          We do not warrant that our website or its functioning or the content\r\n          and material of the services made available thereby will be timely,\r\n          secure, uninterrupted or error-free, that defects will be corrected,\r\n          or that our websites or the servers that make our website available\r\n          are free of viruses or other harmful components. The use of our\r\n          website is at your sole risk and you assume full responsibility for\r\n          any costs associated with your use of our website. We will not be\r\n          liable for any damages of any kind related to the use of our website.\r\n          In no event will we, or our affiliates, our or their respective\r\n          content or service providers, or any of our or their respective\r\n          directors, officers, agents, contractors, suppliers or employees be\r\n          liable to you for any direct, indirect, special, incidental,\r\n          consequential, exemplary or punitive damages, losses or causes of\r\n          action, or lost revenue, lost profits, lost business or sales, or any\r\n          other type of damage, whether based in contract or tort (including\r\n          negligence), strict liability or otherwise, arising from your use of,\r\n          or the inability to use, or the performance of, our website or the\r\n          content or material or functionality through our website, even if we\r\n          are advised of the possibility of such damages. Certain jurisdictions\r\n          do not allow limitation of liability or the exclusion or limitation of\r\n          certain damages. In such jurisdictions, some or all of the above\r\n          disclaimers, exclusions, or limitations, may not apply to you and our\r\n          liability will be limited to the maximum extent permitted by law. 10.\r\n          Indemnification You agree to defend and indemnify us, and hold us and\r\n          our affiliates harmless,, and our and their respective directors,\r\n          officers, agents, contractors, and employees against any losses,\r\n          liabilities, claims, expenses (including legal fees) in any way\r\n          arising from, related to or in connection with your use of our\r\n          website, your violation of the Terms, or the posting or transmission\r\n          of any materials on or through the website by you, including but not\r\n          limited to, any third party claim that any information or materials\r\n          provided by you infringe upon any third party proprietary rights. 11.\r\n          Entire Agreement The Terms and any documents expressly referred to in\r\n          them represent the entire agreement between you and us in relation to\r\n          the subject matter of the Terms and supersede any prior agreement,\r\n          understanding or arrangement between you and us, whether oral or in\r\n          writing. Both you and we acknowledge that, in entering into these\r\n          Terms, neither you nor we have relied on any representation,\r\n          undertaking or promise given by the other or implied from anything\r\n          said or written between you and us prior to such Terms, except as\r\n          expressly stated in the Terms. 12. Waiver Our failure to exercise or\r\n          enforce any right or provision of the Terms will not constitute a\r\n          waiver of such right or provision. A waiver by us of any default will\r\n          not constitute a waiver of any subsequent default. No waiver by us is\r\n          effective unless it is communicated to you in writing. 13. Headings\r\n          Any headings and titles herein are for convenience only. 14.\r\n          Severability If any of the provisions of the Terms are determined by\r\n          any competent authority to be invalid, unlawful or unenforceable, such\r\n          provision will to that extent be severed from the remaining Terms,\r\n          which will continue to be valid and enforceable to the fullest extent\r\n          permitted by law. 15. Governing Law Any disputes arising out of or\r\n          relating to the Terms, the Privacy Policy, use of our website, or our\r\n          products or services offered on our website will be resolved in\r\n          accordance with the laws of= the Province of [Name of Province]\r\n          without regard to its conflict of law rules. Any disputes, actions or\r\n          proceedings relating to the Terms or your access to or use of our\r\n          website must be brought before the courts of the Province of [Name of\r\n          Province] in the City of [Name of City], [Name of Province] and you\r\n          irrevocably consent to the exclusive jurisdiction and venue of such\r\n          courts. 16. Questions or Concerns Please send all questions, comments\r\n          and feedback to us at [Email Address].\r\n        </Text>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {} from \"expo\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport SignUpScreen from \"../screens/AuthScreens/SignUpScreen\";\r\nimport ConfirmEmailScreen from \"../screens/AuthScreens/ConfirmEmailScreen\";\r\nimport ForgotPasswordScreen from \"../screens/AuthScreens/ForgotPasswordScreen\";\r\nimport NewPasswordScreen from \"../screens/AuthScreens/NewPasswordScreen\";\r\nimport SignInScreen from \"../screens/AuthScreens/SignInScreen\";\r\nimport PrivacyPolicyScreen from \"../screens/PublicScreens/PrivacyPolicyScreen\";\r\nimport TermsUseScreen from \"../screens/PublicScreens/TermsUseScreen\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AuthStack() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{ headerShown: false }}\r\n        initialRouteName=\"SignIn\"\r\n      >\r\n        <Stack.Screen name=\"SignIn\" component={SignInScreen} />\r\n        <Stack.Screen name=\"Register\" component={SignUpScreen} />\r\n        <Stack.Screen name=\"ConfirmEmail\" component={ConfirmEmailScreen} />\r\n        <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\r\n        <Stack.Screen name=\"NewPassword\" component={NewPasswordScreen} />\r\n        <Stack.Screen\r\n          name=\"PrivacyPolicy\"\r\n          component={PrivacyPolicyScreen}\r\n          options={{ title: \"Privacy Policy\", headerShown: true }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"TermsUse\"\r\n          component={TermsUseScreen}\r\n          options={{ title: \"Terms of Use\", headerShown: true }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default AuthStack;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { View, Text, ScrollView } from \"react-native\";\r\nimport CustomButton from \"../../components/Buttons/CustomButton\";\r\nimport CustomInputText from \"../../components/Inputs/CustomInputText\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport styles from \"../../styles/styles\";\r\nimport { EMAIL_REGEX, RUC_REGEX } from \"../../utils/constants\";\r\n\r\nconst InitialConfigScreen = () => {\r\n  const { user, logOut, updateAttribute, error, clearError } =\r\n    useContext(AuthContext);\r\n  const { control, handleSubmit, setValue } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setValue(\"ruc\", user.payload[\"cognito:username\"]);\r\n      setValue(\"email\", user.payload.email);\r\n    }\r\n  }, [user]);\r\n\r\n  const onSubmitPressed = async (data) => {\r\n    try {\r\n      const response = await fetch(\"https://tu-api.com/endpoint\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(\"Error al enviar los datos:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Company Data</Text>\r\n        {error && <Text style={{ color: \"red\" }}>Error: {error}</Text>}\r\n        <View style={styles.customerDetails}>\r\n          <CustomInputText\r\n            disabled\r\n            name=\"ruc\"\r\n            label=\"RUC\"\r\n            control={control}\r\n            rules={{\r\n              required: \"RUC is required\",\r\n              pattern: {\r\n                value: RUC_REGEX,\r\n                message: \"RUC should contain only numbers\",\r\n              },\r\n              minLength: {\r\n                value: 13,\r\n                message: \"RUC should be at least 13 digits long\",\r\n              },\r\n              maxLength: {\r\n                value: 13,\r\n                message: \"RUC should be maximum 13 digits long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the commercial name\"\r\n            name=\"commercial\"\r\n            label=\"Commercial Name\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Comercial name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 24,\r\n                message: \"Name should be max 24 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Email is required\",\r\n              pattern: { value: EMAIL_REGEX, message: \"Email is invalid\" },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the phone\"\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Phone is required\",\r\n              minLength: {\r\n                value: 7,\r\n                message: \"Phone should be at least 7 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 10,\r\n                message: \"Phone should be max 10 characters long\",\r\n              },\r\n            }}\r\n          />\r\n          <CustomInputText\r\n            placeholder=\"Insert the address\"\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            control={control}\r\n            rules={{\r\n              required: \"Address is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Name should be at least 3 characters long\",\r\n              },\r\n              maxLength: {\r\n                value: 50,\r\n                message: \"Address should be max 50 characters long\",\r\n              },\r\n            }}\r\n          />\r\n        </View>\r\n        <CustomButton text=\"Submit\" onPress={handleSubmit(onSubmitPressed)} />\r\n        <CustomButton text=\"LogOut\" onPress={logOut} type=\"DANGER\" />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default InitialConfigScreen;\r\n","import React from \"react\";\r\nimport {} from \"expo\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport InitialConfigScreen from \"../screens/ConfigScreens/InitialConfigScreen\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction ConfigStack() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{ headerShown: false }}\r\n        initialRouteName=\"Config\"\r\n      >\r\n        <Stack.Screen name=\"Config\" component={InitialConfigScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default ConfigStack;\r\n","import { ActivityIndicator, SafeAreaView, StatusBar, View } from \"react-native\";\r\nimport React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useError } from \"../context/ErrorContext\";\r\nimport AppStack from \"./AppStack\";\r\nimport AuthStack from \"./AuthStack\";\r\nimport ConfigStack from \"./ConfigStack\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst AppNavigation = () => {\r\n  const { loading, user } = useContext(AuthContext);\r\n  const { error } = useError();\r\n  const config = user ? user.payload[\"custom:config\"] : false;\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{ flex: 1, justifyContent: \"center\", alignContent: \"center\" }}\r\n      >\r\n        <ActivityIndicator size={\"large\"} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <StatusBar\r\n        animated={true}\r\n        backgroundColor=\"#531158\"\r\n        barStyle={\"default\"}\r\n        hidden={false}\r\n      />\r\n      {user ? (\r\n        config === \"true\" ? (\r\n          <AppStack />\r\n        ) : (\r\n          <ConfigStack />\r\n        )\r\n      ) : (\r\n        <AuthStack />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AppNavigation;","/**\r\n * @format\r\n */\r\nimport \"react-native-gesture-handler\";\r\nimport { AppRegistry } from \"react-native\";\r\nimport { expo } from \"./app.json\";\r\nimport { AuthProvider } from \"./src/context/AuthContext\";\r\nimport AppNavigation from \"./src/navigation/AppNavigation\";\r\nimport { Amplify } from \"aws-amplify\";\r\nimport amplifyconfig from \"./src/amplifyconfiguration.json\";\r\nimport { ErrorProvider } from \"./src/context/ErrorContext\";\r\nAmplify.configure(amplifyconfig);\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <ErrorProvider>\r\n          <AppNavigation />\r\n      </ErrorProvider>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nAppRegistry.registerComponent(expo.name, () => App);\r\n\r\nexport default App;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [564], () => (__webpack_require__(15530)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["AuthContext","createContext","AuthProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","useEffect","checkUser","_ref2","_asyncToGenerator","_yield$fetchAuthSessi","idToken","fetchAuthSession","tokens","err","message","apply","arguments","_logIn","username","password","_yield$fetchAuthSessi2","signIn","logOut","_ref4","signOut","_updateAttribute","updateUserAttributes","userAttributes","console","log","_jsx","Provider","value","logIn","_x","_x2","clearError","updateAttribute","ErrorContext","useError","context","useContext","Error","ErrorProvider","errorMessage","setErrorMessage","StyleSheet","create","void","root","flex","backgroundColor","color","container","padding","containerRow","flexDirection","justifyContent","columnGap","containerCol","rowGap","containerTable","paddingHorizontal","buttonContainer","width","marginVertical","alignItems","borderRadius","inputContainer","borderColor","borderWidth","position","customerDetails","marginTop","searchProduct","selectedProducts","itemContainer","borderBottomWidth","paddingVertical","borderBottomColor","itemDetails","productItem","item","billSummary","button","elevation","buttonOpen","buttonClose","textStyle","fontWeight","textAlign","modalText","marginBottom","title","fontSize","subtitle","chart","container_PRIMARY","container_SECONDARY","container_TERTIARY","container_DANGER","textButton","text_SECONDARY","text_TERTIARY","text_DANGER","removeButton","headerTable","paddingBottom","headerTextTable","itemTable","cellTable","borderRightWidth","cellRowTable","nameTable","cartContainer","searchContainer","quantityContainer","quantityInput","itemName","itemDescription","imgContainer","img","height","resizeMode","info","detail","itemTitle","itemPrice","addToCartButton","addToCartText","label","top","left","input","logo","maxWidth","maxHeight","text","link","card","marginLeft","marginRight","cardImage","cardText","cardSubText","onPress","_ref$type","type","bgColor","fgColor","Pressable","style","styles","Text","newPasswordStyles","margin","navigation","useNavigate","ScrollView","showsVerticalScrollIndicator","_jsxs","View","CustomButton","navigate","useNavigation","goTo","screenName","params","length","undefined","goBack","shadowColor","shadowOpacity","shadowRadius","shadowOffset","fetchData","url","response","fetch","method","headers","Accept","json","getDataByCategory","id","body","JSON","parse","count","addCategory","_ref3","data","stringify","ok","status","_x3","addClient","idType","requestData","_objectSpread","tid","_x4","_x5","addProductToInventory","_ref5","idCategory","idSupplier","idUnit","isNaN","Number","price","sugprice","stock","name","supplier","category","unit","toLowerCase","_x6","_x7","_x8","_x9","_x10","addSupplier","_ref6","lastname","address","comercial","commercial","_x11","updateData","_ref7","newData","_x12","_x13","_x14","control","_ref$rules","rules","placeholder","secureTextEntry","handleInputChange","defaultValue","disabled","Controller","render","_ref2$field","field","onChange","onBlur","fieldState","isError","TextInput","onChangeText","alignSelf","helper","numColumns","Platform","OS","useForm","filter","setFilter","master","setMaster","setSearch","_Fragment","CustomSearchInput","itemData","toUpperCase","itemCodeData","code","itemAuxData","aux","textData","indexOf","searchFilter","FlatList","renderItem","Image","source","require","onMorePressed","search","products","setProducts","_useNavigate","loadData","nestedScrollEnabled","CustomCardProductsKardex","props","_useContext","DrawerContentScrollView","contentContainerStyle","paddingTop","ImageBackground","USER","payload","DrawerItemList","borderTopColor","borderTopWidth","Ionicons","size","_fetchTotalSalesByDay","total_por_dia","_fetchTotalSalesByMonth","total_por_mes","_fetchTotalSalesByYear","total_por_anio","_fetchHistoricalSales","monthlyData","map","x","mes","y","_fetchTotalSales","sum","historicalSales","setHistoricalSales","historicalSalesData","fetchHistoricalSales","screenWidth","Dimensions","get","screenHeight","device","VictoryChart","theme","VictoryTheme","material","VictoryLine","stroke","parent","border","VictoryScatter","fill","VictoryAxis","grid","dependentAxis","axis","amount","annualAmount","dailyAmount","HomeScreen","totalSalesByDay","setTotalSalesByDay","totalSalesByMonth","setTotalSalesByMonth","totalSalesByYear","setTotalSalesByYear","totalSales","setTotalSales","_useState9","_useState10","totalSalesByDayData","fetchTotalSalesByDay","totalSalesByMonthData","fetchTotalSalesByMonth","totalSalesByYearData","fetchTotalSalesByYear","totalSalesData","fetchTotalSales","toFixed","ActivityIndicator","CustomChart","SalesOverviewCard","refresher","rucData","ruc","person","users","setUsers","updateSuppliers","CustomCardSuppliers","onButtonPress","page","updateProducts","CustomCardProducts","firstNameData","firstname","ciData","ci","toString","index","updateClients","CustomCardClients","SettingsScreen","editable","searchCustomerById","customerId","setValue","Array","isArray","clearCustomerValues","setCustomerValues","customerData","email","phone","getCustomerById","updateCustomerData","EMAIL_REGEX","RUC_REGEX","setCustomerId","onNextPressed","handleSubmit","handleSearchCustomer","CustomInputText","required","pattern","minLength","maxLength","product","quantity","appliesIVA","prediccion","calculateChange","totals","setChange","parseFloat","total","handleQuantityChange","productId","setSelectedProducts","newQuantity","parseInt","sendBillingData","newBillingData","statusText","responseData","TouchableOpacity","productToAdd","find","existingProduct","newProduct","concat","_toConsumableArray","handleAddToInvoice","handleRemoveFromInvoice","searchQuery","setSearchQuery","filteredProducts","setFilteredProducts","onBackPressed","query","filtered","includes","SearchCart","keyExtractor","SelectedCart","_ref$showDecimals","showDecimals","test","isValidNumber","keyboardType","setTotals","paymentMethod","setPaymentMethod","setCashInput","change","watch","cash","subtotal","reduce","tariff0","tariff12","iva12","calculateTotals","CustomInputNumber","redirectToPaymentPlatform","firstName","lastName","setStep","onSubmitPressed","newBilling","date","today","Date","year","getFullYear","month","getMonth","day","getDate","getCurrentDate","clientData","valuesTotals","handleSubmitClean","ResumeCart","_useForm","_useError","step","formData","setFormData","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","cashInput","_useState21","_useState22","handlePreviousStep","handleBillingStepSubmit","BillingStep1","BillingStep2","BillingStep3","BillingStep4","alignContent","BillingStepper","Drawer","createDrawerNavigator","Navigator","drawerLockMode","drawerContent","CustomDrawer","initialRouteName","screenOptions","drawerStyle","headerStyle","headerTintColor","headerTitleAlign","headerTitleStyle","drawerActiveTintColor","drawerActiveBackgroundColor","drawerInactiveTintColor","drawerLabelStyle","Screen","options","drawerLabel","drawerIcon","component","InventoryScreen","SuppliersScreen","ClientsScreen","BillingScreen","AccountingScreen","able","_ref$options","setIndex","Picker","enabled","selectedValue","onValueChange","selectedIndex","Item","route","setIdType","CustomPicker","alert","categories","setCategories","setIdCategory","suppliers","setSuppliers","setIdSupplier","types","setTypes","setIdUnit","load_data_sup","load_data_cat","load_data_type","getSuggestedPrice","getInternalCode","array","sugCode","split","word","charAt","join","sugPrice","updateCategories","valueAsNumber","getSupplierById","supplierId","updateSupplierData","supplierData","setSupplierValues","updatedProduct","accounts","setAccounts","sortedAccounts","sort","a","b","codigo_cuenta","updateList","nombre_cuenta","editAccount","MaterialCommunityIcons","id_cuenta","account","invoice","details","journalEntries","expandedEntry","setExpandedEntry","debit","credit","ledgerEntries","cardexEntries","setCardexEntries","topMargin","fecha","cantidad","tipo_movimiento","id_registro","ProductScreen","filteredAccounts","setFilteredAccounts","selectedAccount","setSelectedAccount","splitCodeAndSum","splitCode","parentCode","existingChildCodes","startsWith","pop","nextNumber","Math","max","childCode","slice","onSavePressed","idCuentaPadre","nivelCuenta","nivel_cuenta","padre_cuenta","localeCompare","accountToAdd","acc","prev","handleAccount","newStock","client","setJournalEntries","CustomCardInvoices","DetailsScreen","invoiceDetails","setInvoiceDetails","cliente","identificacion","nombre","apellido","mail","telefono","direccion","detalles","nombre_producto","codigo_principal","precio_unitario","subtotal_sin_impuestos","sub_total_0","subtotal_12","iva","total_factura","responseBody","Stack","createNativeStackNavigator","NavigationContainer","SideNavigation","headerShown","NotFoundScreen","headerTitle","NewSupplierForm","NewProductForm","NewCategoryForm","StockScreen","NewClientForm","ProfileScreen","InvoiceScreen","KardexScreen","CardexScreen","AccountsScreen","NewAccountForm","EditAccountForm","JournalScreen","LedgerScreen","Company","UserScreen","onSignUp","updated_at","now","signUp","picture","currentAuthenticatedUser","setEmail","attributes","Auth","currentUser","_useRegistration","useRegistration","setPassword","pwd","validate","confirmEmailCode","confirmationCode","confirmSignUp","resendCodeMail","resendSignUpCode","success","forgotPassword","output","nextStep","resetPasswordStep","codeDeliveryDetails","deliveryMedium","handleResetPasswordNextSteps","resetPassword","newForgotPassword","_ref8","newPassword","confirmResetPassword","_useConfirmation","useConfirmation","onSendPressed","useWindowDimensions","onSignInPressed","Logo","globalStyles","blueText","redText","PrivacyPolicyScreen","TermsUseScreen","SignInScreen","SignUpScreen","ConfirmEmailScreen","ForgotPasswordScreen","NewPasswordScreen","InitialConfigScreen","config","SafeAreaView","StatusBar","animated","barStyle","hidden","AppStack","ConfigStack","AuthStack","Amplify","configure","amplifyconfig","App","AppNavigation","AppRegistry","registerComponent","expo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}